// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module LZC(	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:231:7
  input  [4:0] io_in,	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:232:14
  output [2:0] io_out,	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:232:14
  output       io_isZero	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:232:14
);

  wire [4:0] rev = {io_in[0], io_in[1], io_in[2], io_in[3], io_in[4]};	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:237:22
  assign io_out =
    (|rev)
      ? (io_in[4] ? 3'h0 : io_in[3] ? 3'h1 : io_in[2] ? 3'h2 : io_in[1] ? 3'h3 : 3'h4)
      : 3'h5;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:231:7, :237:22, :238:19, :240:19, src/main/scala/chisel3/util/Mux.scala:50:70
  assign io_isZero = ~(|rev);	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:231:7, :237:22, :238:19, :239:16
endmodule

module FPAdder_6_10(	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7
  input        clock,	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7
               reset,	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7
  input  [5:0] io_in_a,	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:245:14
               io_in_b,	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:245:14
  input        io_valid_in,	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:245:14
  output [5:0] io_out,	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:245:14
  output       io_valid_out	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:245:14
);

  wire [2:0] _lzc_io_out;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:326:19
  wire       _lzc_io_isZero;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:326:19
  wire [3:0] eA = (|(io_in_a[5:4])) ? {2'h0, io_in_a[5:4]} - 4'h1 : 4'h0;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :271:21, :278:23, :292:33, :293:6, :375:13
  wire [3:0] eB = (|(io_in_b[5:4])) ? {2'h0, io_in_b[5:4]} - 4'h1 : 4'h0;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :275:21, :279:23, :292:33, :293:6, :375:13
  wire [3:0] _expDiffs_T = eA - eB;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:293:6, :300:27
  wire       expAGtB = $signed(eA) > $signed(eB);	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:293:6, :301:20
  wire [3:0] expDiff = $signed(_expDiffs_T) < 4'sh0 ? 4'h0 - _expDiffs_T : _expDiffs_T;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:300:27, :302:{26,36,54}, :375:13
  wire [5:0] fracSum =
    {1'h0, expAGtB ? {|(io_in_a[5:4]), io_in_a[3:0]} : {|(io_in_b[5:4]), io_in_b[3:0]}}
    + (expAGtB
         ? {1'h0, |(io_in_b[5:4]), io_in_b[3:0]} >> (expDiff > 4'h6 ? 4'h6 : expDiff)
         : {1'h0, |(io_in_a[5:4]), io_in_a[3:0]} >> (expDiff > 4'h6 ? 4'h6 : expDiff));	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:271:21, :272:22, :275:21, :276:22, :278:23, :279:23, :301:20, :302:26, :308:17, :309:{18,34}, :310:{18,34,45,51,60}, :316:18, :317:{18,45,51,60}, :322:30
  reg        sr_valid_0;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:395:25
  reg        sr_valid_1;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:395:25
  reg        sr_valid_2;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:395:25
  reg        sr_valid_3;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:395:25
  reg        sr_valid_4;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:395:25
  reg        sr_valid_5;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:395:25
  reg        sr_valid_6;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:395:25
  reg        sr_valid_7;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:395:25
  reg        sr_valid_8;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:395:25
  reg        sr_valid_9;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:395:25
  reg  [5:0] sr_data_0;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:396:20
  reg  [5:0] sr_data_1;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:396:20
  reg  [5:0] sr_data_2;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:396:20
  reg  [5:0] sr_data_3;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:396:20
  reg  [5:0] sr_data_4;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:396:20
  reg  [5:0] sr_data_5;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:396:20
  reg  [5:0] sr_data_6;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:396:20
  reg  [5:0] sr_data_7;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:396:20
  reg  [5:0] sr_data_8;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:396:20
  reg  [5:0] sr_data_9;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:396:20
  always @(posedge clock) begin	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7
    if (reset) begin	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7
      sr_valid_0 <= 1'h0;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:278:23, :395:25
      sr_valid_1 <= 1'h0;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:278:23, :395:25
      sr_valid_2 <= 1'h0;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:278:23, :395:25
      sr_valid_3 <= 1'h0;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:278:23, :395:25
      sr_valid_4 <= 1'h0;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:278:23, :395:25
      sr_valid_5 <= 1'h0;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:278:23, :395:25
      sr_valid_6 <= 1'h0;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:278:23, :395:25
      sr_valid_7 <= 1'h0;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:278:23, :395:25
      sr_valid_8 <= 1'h0;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:278:23, :395:25
      sr_valid_9 <= 1'h0;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:278:23, :395:25
    end
    else begin	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7
      sr_valid_0 <= io_valid_in;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:395:25
      sr_valid_1 <= sr_valid_0;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:395:25
      sr_valid_2 <= sr_valid_1;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:395:25
      sr_valid_3 <= sr_valid_2;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:395:25
      sr_valid_4 <= sr_valid_3;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:395:25
      sr_valid_5 <= sr_valid_4;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:395:25
      sr_valid_6 <= sr_valid_5;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:395:25
      sr_valid_7 <= sr_valid_6;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:395:25
      sr_valid_8 <= sr_valid_7;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:395:25
      sr_valid_9 <= sr_valid_8;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:395:25
    end
    if (io_valid_in) begin	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:245:14
      automatic logic [3:0]  expOut = expAGtB ? eA : eB;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:293:6, :301:20, :308:17, :311:12, :318:12
      automatic logic [11:0] _shiftedFrac_T_2 = {7'h0, fracSum[4:0]} << _lzc_io_out;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:322:30, :326:19, :327:23, :358:48
      automatic logic [4:0]  shiftedFrac =
        fracSum[5] ? fracSum[5:1] : _lzc_io_isZero ? 5'h0 : _shiftedFrac_T_2[4:0];	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:322:30, :323:25, :326:19, :350:18, :351:{17,27}, :354:18, :355:19, :358:{19,48,60}
      automatic logic [3:0]  newExp =
        fracSum[5] ? expOut + 4'h1 : _lzc_io_isZero ? 4'h0 : expOut - {1'h0, _lzc_io_out};	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:278:23, :292:33, :308:17, :311:12, :318:12, :322:30, :323:25, :326:19, :350:18, :352:{12,22}, :354:18, :356:14, :359:{14,24}, :375:13
      automatic logic        _GEN = shiftedFrac == 5'h0;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:350:18, :351:17, :354:18, :355:19, :373:21
      automatic logic        _GEN_0 = $signed(newExp) < 4'sh0;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:350:18, :352:12, :354:18, :375:13, :376:22
      automatic logic [3:0]  _k_T = 4'h0 - newExp;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:302:54, :350:18, :352:12, :354:18, :375:13, :377:17
      automatic logic        _GEN_1 = $signed(newExp) > 4'sh2;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:350:18, :352:12, :354:18, :382:22
      automatic logic [4:0]  den = shiftedFrac >> (_k_T > 4'h5 ? 4'h5 : _k_T);	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:302:54, :350:18, :351:17, :354:18, :377:17, :378:{19,22}, :379:29
      sr_data_0 <=
        {_GEN | _GEN_0 ? 2'h0 : _GEN_1 ? 2'h3 : newExp[1:0] + 2'h1,
         _GEN ? 4'h0 : _GEN_0 ? den[3:0] : _GEN_1 ? 4'hF : shiftedFrac[3:0]};	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :302:54, :350:18, :351:17, :352:12, :354:18, :373:{21,30}, :374:13, :375:13, :376:{22,39}, :377:17, :379:29, :380:13, :381:{13,19}, :382:{22,32}, :383:13, :384:13, :386:24, :387:13, :388:{13,27}, :392:19, :396:20
    end
    sr_data_1 <= sr_data_0;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:396:20
    sr_data_2 <= sr_data_1;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:396:20
    sr_data_3 <= sr_data_2;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:396:20
    sr_data_4 <= sr_data_3;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:396:20
    sr_data_5 <= sr_data_4;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:396:20
    sr_data_6 <= sr_data_5;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:396:20
    sr_data_7 <= sr_data_6;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:396:20
    sr_data_8 <= sr_data_7;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:396:20
    sr_data_9 <= sr_data_8;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:396:20
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7
      automatic logic [31:0] _RANDOM[0:2];	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7
        `INIT_RANDOM_PROLOG_	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7
        for (logic [1:0] i = 2'h0; i < 2'h3; i += 2'h1) begin
          _RANDOM[i] = `RANDOM;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7
        end	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7
        sr_valid_0 = _RANDOM[2'h0][0];	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :395:25
        sr_valid_1 = _RANDOM[2'h0][1];	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :395:25
        sr_valid_2 = _RANDOM[2'h0][2];	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :395:25
        sr_valid_3 = _RANDOM[2'h0][3];	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :395:25
        sr_valid_4 = _RANDOM[2'h0][4];	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :395:25
        sr_valid_5 = _RANDOM[2'h0][5];	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :395:25
        sr_valid_6 = _RANDOM[2'h0][6];	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :395:25
        sr_valid_7 = _RANDOM[2'h0][7];	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :395:25
        sr_valid_8 = _RANDOM[2'h0][8];	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :395:25
        sr_valid_9 = _RANDOM[2'h0][9];	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :395:25
        sr_data_0 = _RANDOM[2'h0][15:10];	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :395:25, :396:20
        sr_data_1 = _RANDOM[2'h0][21:16];	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :395:25, :396:20
        sr_data_2 = _RANDOM[2'h0][27:22];	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :395:25, :396:20
        sr_data_3 = {_RANDOM[2'h0][31:28], _RANDOM[2'h1][1:0]};	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :395:25, :396:20
        sr_data_4 = _RANDOM[2'h1][7:2];	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :396:20
        sr_data_5 = _RANDOM[2'h1][13:8];	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :396:20
        sr_data_6 = _RANDOM[2'h1][19:14];	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :396:20
        sr_data_7 = _RANDOM[2'h1][25:20];	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :396:20
        sr_data_8 = _RANDOM[2'h1][31:26];	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :396:20
        sr_data_9 = _RANDOM[2'h2][5:0];	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :396:20
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7
      `FIRRTL_AFTER_INITIAL	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  LZC lzc (	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:326:19
    .io_in     (fracSum[4:0]),	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:322:30, :327:23
    .io_out    (_lzc_io_out),
    .io_isZero (_lzc_io_isZero)
  );
  assign io_out = sr_data_9;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :396:20
  assign io_valid_out = sr_valid_9;	// Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala:243:7, :395:25
endmodule

