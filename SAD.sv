// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

module LZC(	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:221:7
  input  [2:0] io_in,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:222:14
  output [1:0] io_out	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:222:14
);

  assign io_out = io_in[2] ? 2'h0 : io_in[1] ? 2'h1 : 2'h2;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:221:7, :227:35, src/main/scala/chisel3/util/Mux.scala:50:70
endmodule

module FPSubtractorAbs_4_7(	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
  input        clock,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
               reset,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
  input  [3:0] io_a,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:369:14
               io_b,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:369:14
  output [3:0] io_out,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:369:14
  input        io_valid_in,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:369:14
  output       io_valid_out	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:369:14
);

  wire [1:0] _lzc_io_out;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:432:19
  wire       _GEN = io_a >= io_b;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:382:13
  wire [2:0] aVal = _GEN ? io_a[2:0] : io_b[2:0];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:369:14, :382:{13,22}, :383:10, :386:10
  wire [2:0] bVal = _GEN ? io_b[2:0] : io_a[2:0];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:369:14, :382:{13,22}, :384:10, :387:10
  wire       _expDiff_T = aVal[2:1] >= bVal[2:1];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:382:22, :383:10, :384:10, :386:10, :387:10, :395:18, :404:19, :408:27
  wire [2:0] aExt = {1'h1, aVal[0], 1'h0};	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :382:22, :383:10, :386:10, :402:18, :411:17
  wire [2:0] bExt = {1'h1, bVal[0], 1'h0};	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :382:22, :384:10, :387:10, :405:18, :412:17
  wire [2:0] _GEN_0 = {1'h0, _expDiff_T ? aVal[2:1] - bVal[2:1] : bVal[2:1] - aVal[2:1]};	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :382:22, :383:10, :384:10, :386:10, :387:10, :395:18, :404:19, :408:{20,27,43,58}, :420:22
  wire [2:0] _diff_T =
    (_expDiff_T ? aExt : aExt >> _GEN_0) - (_expDiff_T ? bExt >> _GEN_0 : bExt);	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:408:27, :411:17, :412:17, :418:24, :419:14, :420:{14,22}, :423:{14,22}, :424:14, :429:23
  reg  [3:0] sr_array_0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:445:25
  reg  [3:0] sr_array_1;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:445:25
  reg  [3:0] sr_array_2;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:445:25
  reg  [3:0] sr_array_3;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:445:25
  reg  [3:0] sr_array_4;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:445:25
  reg  [3:0] sr_array_5;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:445:25
  reg  [3:0] sr_array_6;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:445:25
  reg        valid_sr_0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:446:25
  reg        valid_sr_1;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:446:25
  reg        valid_sr_2;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:446:25
  reg        valid_sr_3;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:446:25
  reg        valid_sr_4;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:446:25
  reg        valid_sr_5;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:446:25
  reg        valid_sr_6;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:446:25
  always @(posedge clock) begin	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
    if (reset) begin	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
      sr_array_0 <= 4'h0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:445:{25,33}
      sr_array_1 <= 4'h0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:445:{25,33}
      sr_array_2 <= 4'h0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:445:{25,33}
      sr_array_3 <= 4'h0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:445:{25,33}
      sr_array_4 <= 4'h0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:445:{25,33}
      sr_array_5 <= 4'h0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:445:{25,33}
      sr_array_6 <= 4'h0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:445:{25,33}
      valid_sr_0 <= 1'h0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :446:25
      valid_sr_1 <= 1'h0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :446:25
      valid_sr_2 <= 1'h0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :446:25
      valid_sr_3 <= 1'h0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :446:25
      valid_sr_4 <= 1'h0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :446:25
      valid_sr_5 <= 1'h0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :446:25
      valid_sr_6 <= 1'h0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :446:25
    end
    else begin	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
      automatic logic [5:0] normalizedMantFull = {3'h0, _diff_T} << _lzc_io_out;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:429:23, :432:19, :437:33
      sr_array_0 <=
        {1'h0, (_expDiff_T ? aVal[2:1] : bVal[2:1]) - _lzc_io_out, normalizedMantFull[1]};	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :382:22, :383:10, :384:10, :386:10, :387:10, :395:18, :404:19, :408:27, :418:24, :421:12, :425:12, :432:19, :437:33, :438:42, :440:28, :445:25, :448:15
      sr_array_1 <= sr_array_0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:445:25
      sr_array_2 <= sr_array_1;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:445:25
      sr_array_3 <= sr_array_2;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:445:25
      sr_array_4 <= sr_array_3;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:445:25
      sr_array_5 <= sr_array_4;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:445:25
      sr_array_6 <= sr_array_5;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:445:25
      valid_sr_0 <= io_valid_in;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:446:25
      valid_sr_1 <= valid_sr_0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:446:25
      valid_sr_2 <= valid_sr_1;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:446:25
      valid_sr_3 <= valid_sr_2;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:446:25
      valid_sr_4 <= valid_sr_3;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:446:25
      valid_sr_5 <= valid_sr_4;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:446:25
      valid_sr_6 <= valid_sr_5;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:446:25
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
    `ifdef FIRRTL_BEFORE_INITIAL	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
      `FIRRTL_BEFORE_INITIAL	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
      automatic logic [31:0] _RANDOM[0:1];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
      `ifdef INIT_RANDOM_PROLOG_	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
        `INIT_RANDOM_PROLOG_	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM[i[0]] = `RANDOM;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
        end	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
        sr_array_0 = _RANDOM[1'h0][3:0];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :445:25
        sr_array_1 = _RANDOM[1'h0][7:4];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :445:25
        sr_array_2 = _RANDOM[1'h0][11:8];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :445:25
        sr_array_3 = _RANDOM[1'h0][15:12];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :445:25
        sr_array_4 = _RANDOM[1'h0][19:16];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :445:25
        sr_array_5 = _RANDOM[1'h0][23:20];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :445:25
        sr_array_6 = _RANDOM[1'h0][27:24];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :445:25
        valid_sr_0 = _RANDOM[1'h0][28];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :445:25, :446:25
        valid_sr_1 = _RANDOM[1'h0][29];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :445:25, :446:25
        valid_sr_2 = _RANDOM[1'h0][30];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :445:25, :446:25
        valid_sr_3 = _RANDOM[1'h0][31];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :445:25, :446:25
        valid_sr_4 = _RANDOM[1'h1][0];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :446:25
        valid_sr_5 = _RANDOM[1'h1][1];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :446:25
        valid_sr_6 = _RANDOM[1'h1][2];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :446:25
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
      `FIRRTL_AFTER_INITIAL	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  LZC lzc (	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:432:19
    .io_in  (_diff_T),	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:429:23
    .io_out (_lzc_io_out)
  );
  assign io_out = sr_array_6;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :445:25
  assign io_valid_out = valid_sr_6;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :446:25
endmodule

module FPAdder_4_7(	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7
  input        clock,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7
               reset,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7
  input  [3:0] io_in_a,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:232:14
               io_in_b,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:232:14
  input        io_valid_in,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:232:14
  output [3:0] io_out,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:232:14
  output       io_valid_out	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:232:14
);

  wire [1:0] _lzc_io_out;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:280:19
  wire       expAGtB = io_in_a[2:1] > io_in_b[2:1];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:245:21, :249:21, :258:22
  wire [2:0] expDiff =
    {1'h0, expAGtB ? io_in_a[2:1] - io_in_b[2:1] : io_in_b[2:1] - io_in_a[2:1]};	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :245:21, :249:21, :258:22, :259:{11,17,32,45}
  wire [2:0] _alignedSmall_T = {2'h1, io_in_b[0]} >> expDiff;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :250:22, :259:11, :267:31
  wire       _GEN = expAGtB ? io_in_a[0] : io_in_b[0];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:246:22, :250:22, :258:22, :265:17, :266:18, :270:18
  wire [2:0] _alignedSmall_T_1 = {2'h1, io_in_a[0]} >> expDiff;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :246:22, :259:11, :266:18, :271:31
  wire [1:0] _GEN_0 = expAGtB ? _alignedSmall_T[1:0] : _alignedSmall_T_1[1:0];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:258:22, :265:17, :267:{18,31}, :271:{18,31}
  wire [1:0] expOut = expAGtB ? io_in_a[2:1] : io_in_b[2:1];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:245:21, :249:21, :258:22, :265:17, :268:12, :272:12
  wire [2:0] _fracSum_T = {2'h1, _GEN} + {1'h0, _GEN_0};	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :265:17, :266:18, :267:18, :270:18, :271:18, :276:30
  wire       _GEN_1 = ~(_fracSum_T[2]) & _fracSum_T[1];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:276:30, :277:25, :291:{37,45,55}
  wire [5:0] _shiftedFrac_T_1 = {3'h0, _fracSum_T} << _lzc_io_out;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:276:30, :280:19, :297:28
  wire       shiftedFrac =
    _fracSum_T[2] ? _fracSum_T[1] : _GEN_1 ? _fracSum_T[0] : _shiftedFrac_T_1[0];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:276:30, :277:25, :287:18, :289:17, :291:{45,55,76}, :293:17, :297:{17,28}
  wire [1:0] newExp =
    _fracSum_T[2]
      ? expOut + 2'h1
      : _GEN_1 ? expOut : expOut >= _lzc_io_out ? expOut - _lzc_io_out : 2'h0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :265:17, :268:12, :272:12, :276:30, :277:25, :280:19, :287:18, :290:{12,22}, :291:{45,76}, :294:12, :298:{12,18,26,46}
  wire [3:0] result = {1'h0, newExp, shiftedFrac};	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :287:18, :289:17, :290:12, :291:76, :304:19
  reg        sr_valid_0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:307:25
  reg        sr_valid_1;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:307:25
  reg        sr_valid_2;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:307:25
  reg        sr_valid_3;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:307:25
  reg        sr_valid_4;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:307:25
  reg        sr_valid_5;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:307:25
  reg        sr_valid_6;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:307:25
  reg  [3:0] sr_data_0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:308:20
  reg  [3:0] sr_data_1;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:308:20
  reg  [3:0] sr_data_2;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:308:20
  reg  [3:0] sr_data_3;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:308:20
  reg  [3:0] sr_data_4;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:308:20
  reg  [3:0] sr_data_5;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:308:20
  reg  [3:0] sr_data_6;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:308:20
  `ifndef SYNTHESIS	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:327:11
    always @(posedge clock) begin	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:327:11
      automatic logic _GEN_2 = io_valid_in & ~(_fracSum_T[2]);	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:276:30, :277:25, :291:37, :345:20
      automatic logic _GEN_3 = (`PRINTF_COND_) & io_valid_in & ~reset;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:327:11
      if (_GEN_3) begin	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:327:11, :344:11
        $fwrite(32'h80000002, "[STEP 1: Extract Fields]\n");	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:327:11
        $fwrite(32'h80000002, "  A = %b => signA: %b | expA: %b | fracA: %b\n", io_in_a,
                io_in_a[3], io_in_a[2:1], io_in_a[0]);	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:244:22, :245:21, :246:22, :327:11, :328:11
        $fwrite(32'h80000002, "  B = %b => signB: %b | expB: %b | fracB: %b\n", io_in_b,
                io_in_b[3], io_in_b[2:1], io_in_b[0]);	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:248:22, :249:21, :250:22, :327:11, :329:11
        $fwrite(32'h80000002, "[STEP 2: Compare Exponents]\n");	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:327:11, :331:11
        $fwrite(32'h80000002, "  expA: %d, expB: %d\n", io_in_a[2:1], io_in_b[2:1]);	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:245:21, :249:21, :327:11, :332:11
        $fwrite(32'h80000002, "  expDiff: %d => expAGtB: %b\n", expDiff, expAGtB);	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:258:22, :259:11, :327:11, :333:11
        $fwrite(32'h80000002, "[STEP 3: Align Mantissas]\n");	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:327:11, :335:11
        $fwrite(32'h80000002, "  normFracA (with hidden 1): %b\n", {1'h1, io_in_a[0]});	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :246:22, :253:22, :327:11, :336:11
        $fwrite(32'h80000002, "  normFracB (with hidden 1): %b\n", {1'h1, io_in_b[0]});	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :250:22, :254:22, :327:11, :337:11
        $fwrite(32'h80000002, "  alignedLarge: %b | alignedSmall: %b\n", {2'h1, _GEN},
                {1'h0, _GEN_0});	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :265:17, :266:18, :267:18, :270:18, :271:18, :327:11, :338:11
        $fwrite(32'h80000002, "  selectedExpOut: %d\n", expOut);	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:265:17, :268:12, :272:12, :327:11, :339:11
        $fwrite(32'h80000002, "[STEP 4: Add Aligned Mantissas]\n");	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:327:11, :341:11
        $fwrite(32'h80000002, "  sum: %b (carryOut = %b)\n", _fracSum_T, _fracSum_T[2]);	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:276:30, :277:25, :327:11, :342:11
        $fwrite(32'h80000002, "[STEP 5: Normalize Result]\n");	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:327:11, :344:11
      end
      if ((`PRINTF_COND_) & io_valid_in & _fracSum_T[2] & ~reset)	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:276:30, :277:25, :327:11, :346:13
        $fwrite(32'h80000002, "  CarryOut = 1 => shift right by 1\n");	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:327:11, :346:13
      if ((`PRINTF_COND_) & _GEN_2 & _GEN_1 & ~reset)	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:291:45, :327:11, :345:20, :348:13
        $fwrite(32'h80000002, "  Already normalized => no shift needed\n");	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:327:11, :348:13
      if ((`PRINTF_COND_) & _GEN_2 & ~_GEN_1 & ~reset)	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:291:45, :327:11, :345:20, :347:78, :350:13
        $fwrite(32'h80000002, "  No CarryOut => LZC = %d | shift left\n", _lzc_io_out);	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:280:19, :327:11, :350:13
      if (_GEN_3) begin	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:327:11, :357:11
        $fwrite(32'h80000002, "  normFrac: %b | normExp: %d\n", shiftedFrac, newExp);	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:287:18, :289:17, :290:12, :291:76, :327:11, :352:11
        $fwrite(32'h80000002, "[STEP 6: Final Result Reassembly]\n");	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:327:11, :354:11
        $fwrite(32'h80000002, "  Final result = %b\n", result);	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:304:19, :327:11, :355:11
        $fwrite(32'h80000002,
                "[Cycle Info] bw = %d | pd = %d => valid_out: %b | output: %b\n", 3'h4,
                3'h7, sr_valid_6, sr_data_6);	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:307:25, :308:20, :327:11, :357:11
      end
    end // always @(posedge)
  `endif // not def SYNTHESIS
  always @(posedge clock) begin	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7
    if (reset) begin	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7
      sr_valid_0 <= 1'h0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :307:25
      sr_valid_1 <= 1'h0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :307:25
      sr_valid_2 <= 1'h0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :307:25
      sr_valid_3 <= 1'h0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :307:25
      sr_valid_4 <= 1'h0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :307:25
      sr_valid_5 <= 1'h0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :307:25
      sr_valid_6 <= 1'h0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :307:25
    end
    else begin	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7
      sr_valid_0 <= io_valid_in;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:307:25
      sr_valid_1 <= sr_valid_0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:307:25
      sr_valid_2 <= sr_valid_1;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:307:25
      sr_valid_3 <= sr_valid_2;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:307:25
      sr_valid_4 <= sr_valid_3;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:307:25
      sr_valid_5 <= sr_valid_4;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:307:25
      sr_valid_6 <= sr_valid_5;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:307:25
    end
    if (io_valid_in)	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:232:14
      sr_data_0 <= result;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:304:19, :308:20
    sr_data_1 <= sr_data_0;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:308:20
    sr_data_2 <= sr_data_1;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:308:20
    sr_data_3 <= sr_data_2;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:308:20
    sr_data_4 <= sr_data_3;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:308:20
    sr_data_5 <= sr_data_4;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:308:20
    sr_data_6 <= sr_data_5;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:308:20
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7
    `ifdef FIRRTL_BEFORE_INITIAL	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7
      `FIRRTL_BEFORE_INITIAL	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7
      automatic logic [31:0] _RANDOM[0:1];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7
      `ifdef INIT_RANDOM_PROLOG_	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7
        `INIT_RANDOM_PROLOG_	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM[i[0]] = `RANDOM;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7
        end	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7
        sr_valid_0 = _RANDOM[1'h0][0];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :307:25
        sr_valid_1 = _RANDOM[1'h0][1];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :307:25
        sr_valid_2 = _RANDOM[1'h0][2];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :307:25
        sr_valid_3 = _RANDOM[1'h0][3];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :307:25
        sr_valid_4 = _RANDOM[1'h0][4];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :307:25
        sr_valid_5 = _RANDOM[1'h0][5];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :307:25
        sr_valid_6 = _RANDOM[1'h0][6];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :307:25
        sr_data_0 = _RANDOM[1'h0][10:7];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :307:25, :308:20
        sr_data_1 = _RANDOM[1'h0][14:11];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :307:25, :308:20
        sr_data_2 = _RANDOM[1'h0][18:15];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :307:25, :308:20
        sr_data_3 = _RANDOM[1'h0][22:19];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :307:25, :308:20
        sr_data_4 = _RANDOM[1'h0][26:23];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :307:25, :308:20
        sr_data_5 = _RANDOM[1'h0][30:27];	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :307:25, :308:20
        sr_data_6 = {_RANDOM[1'h0][31], _RANDOM[1'h1][2:0]};	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :307:25, :308:20
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7
      `FIRRTL_AFTER_INITIAL	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  LZC lzc (	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:280:19
    .io_in  (_fracSum_T),	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:276:30
    .io_out (_lzc_io_out)
  );
  assign io_out = sr_data_6;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :308:20
  assign io_valid_out = sr_valid_6;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:230:7, :307:25
endmodule

module SAD(	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:460:7
  input        clock,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:460:7
               reset,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:460:7
  input  [3:0] io_in_vec_a_0,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:461:14
               io_in_vec_a_1,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:461:14
               io_in_vec_a_2,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:461:14
               io_in_vec_a_3,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:461:14
               io_in_vec_b_0,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:461:14
               io_in_vec_b_1,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:461:14
               io_in_vec_b_2,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:461:14
               io_in_vec_b_3,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:461:14
  input        io_valid_in,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:461:14
  output [3:0] io_out,	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:461:14
  output       io_valid_out	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:461:14
);

  wire [3:0] _addModules_1_io_out;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:471:47
  wire       _addModules_1_io_valid_out;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:471:47
  wire [3:0] _addModules_0_io_out;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:471:47
  wire       _addModules_0_io_valid_out;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:471:47
  wire [3:0] _subModules_3_io_out;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:470:43
  wire       _subModules_3_io_valid_out;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:470:43
  wire [3:0] _subModules_2_io_out;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:470:43
  wire       _subModules_2_io_valid_out;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:470:43
  wire [3:0] _subModules_1_io_out;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:470:43
  wire       _subModules_1_io_valid_out;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:470:43
  wire [3:0] _subModules_0_io_out;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:470:43
  wire       _subModules_0_io_valid_out;	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:470:43
  FPSubtractorAbs_4_7 subModules_0 (	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:470:43
    .clock        (clock),
    .reset        (reset),
    .io_a         (io_in_vec_a_0),
    .io_b         (io_in_vec_b_0),
    .io_out       (_subModules_0_io_out),
    .io_valid_in  (io_valid_in),
    .io_valid_out (_subModules_0_io_valid_out)
  );
  FPSubtractorAbs_4_7 subModules_1 (	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:470:43
    .clock        (clock),
    .reset        (reset),
    .io_a         (io_in_vec_a_1),
    .io_b         (io_in_vec_b_1),
    .io_out       (_subModules_1_io_out),
    .io_valid_in  (io_valid_in),
    .io_valid_out (_subModules_1_io_valid_out)
  );
  FPSubtractorAbs_4_7 subModules_2 (	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:470:43
    .clock        (clock),
    .reset        (reset),
    .io_a         (io_in_vec_a_2),
    .io_b         (io_in_vec_b_2),
    .io_out       (_subModules_2_io_out),
    .io_valid_in  (io_valid_in),
    .io_valid_out (_subModules_2_io_valid_out)
  );
  FPSubtractorAbs_4_7 subModules_3 (	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:470:43
    .clock        (clock),
    .reset        (reset),
    .io_a         (io_in_vec_a_3),
    .io_b         (io_in_vec_b_3),
    .io_out       (_subModules_3_io_out),
    .io_valid_in  (io_valid_in),
    .io_valid_out (_subModules_3_io_valid_out)
  );
  FPAdder_4_7 addModules_0 (	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:471:47
    .clock        (clock),
    .reset        (reset),
    .io_in_a      (_subModules_0_io_out),	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:470:43
    .io_in_b      (_subModules_1_io_out),	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:470:43
    .io_valid_in  (_subModules_0_io_valid_out & _subModules_1_io_valid_out),	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:470:43, :483:59
    .io_out       (_addModules_0_io_out),
    .io_valid_out (_addModules_0_io_valid_out)
  );
  FPAdder_4_7 addModules_1 (	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:471:47
    .clock        (clock),
    .reset        (reset),
    .io_in_a      (_addModules_0_io_out),	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:471:47
    .io_in_b      (_subModules_2_io_out),	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:470:43
    .io_valid_in  (_addModules_0_io_valid_out & _subModules_2_io_valid_out),	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:470:43, :471:47, :489:65
    .io_out       (_addModules_1_io_out),
    .io_valid_out (_addModules_1_io_valid_out)
  );
  FPAdder_4_7 addModules_2 (	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:471:47
    .clock        (clock),
    .reset        (reset),
    .io_in_a      (_addModules_1_io_out),	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:471:47
    .io_in_b      (_subModules_3_io_out),	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:470:43
    .io_valid_in  (_addModules_1_io_valid_out & _subModules_3_io_valid_out),	// \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:470:43, :471:47, :489:65
    .io_out       (io_out),
    .io_valid_out (io_valid_out)
  );
endmodule

