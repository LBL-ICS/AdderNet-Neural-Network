// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module LZC(	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:221:7
  input  [3:0] io_in,	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:222:14
  output [2:0] io_out	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:222:14
);

  assign io_out = {1'h0, io_in[3] ? 2'h0 : io_in[2] ? 2'h1 : {1'h1, ~(io_in[1])}};	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:221:7, :227:{10,35}, src/main/scala/chisel3/util/Mux.scala:50:70
endmodule

module FPSubtractorAbs_5_1(	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
  input        clock,	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
               reset,	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
  input  [4:0] io_a,	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:369:14
               io_b,	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:369:14
  output [4:0] io_out,	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:369:14
  input        io_valid_in,	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:369:14
  output       io_valid_out	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:369:14
);

  wire [2:0] _lzc_io_out;	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:432:19
  wire       _GEN = io_a >= io_b;	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:382:13
  wire [3:0] aVal = _GEN ? io_a[3:0] : io_b[3:0];	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:369:14, :382:{13,22}, :383:10, :386:10
  wire [3:0] bVal = _GEN ? io_b[3:0] : io_a[3:0];	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:369:14, :382:{13,22}, :384:10, :387:10
  wire       _expDiff_T = aVal[3:2] >= bVal[3:2];	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:382:22, :383:10, :384:10, :386:10, :387:10, :395:18, :404:19, :408:27
  wire [3:0] aExt = {1'h1, aVal[1:0], 1'h0};	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :382:22, :383:10, :386:10, :402:18, :411:17
  wire [3:0] bExt = {1'h1, bVal[1:0], 1'h0};	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :382:22, :384:10, :387:10, :405:18, :412:17
  wire [3:0] _GEN_0 = {2'h0, _expDiff_T ? aVal[3:2] - bVal[3:2] : bVal[3:2] - aVal[3:2]};	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:382:22, :383:10, :384:10, :386:10, :387:10, :395:18, :404:19, :408:{20,27,43,58}, :420:22
  wire [3:0] _diff_T =
    (_expDiff_T ? aExt : aExt >> _GEN_0) - (_expDiff_T ? bExt >> _GEN_0 : bExt);	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:408:27, :411:17, :412:17, :418:24, :419:14, :420:{14,22}, :423:{14,22}, :424:14, :429:23
  reg  [4:0] sr_array_0;	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:445:25
  reg        valid_sr_0;	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:446:25
  always @(posedge clock) begin	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
    if (reset) begin	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
      sr_array_0 <= 5'h0;	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:445:{25,33}
      valid_sr_0 <= 1'h0;	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :446:25
    end
    else begin	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
      automatic logic [10:0] normalizedMantFull = {7'h0, _diff_T} << _lzc_io_out;	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:429:23, :432:19, :437:33
      sr_array_0 <=
        {{1'h0, _expDiff_T ? aVal[3:2] : bVal[3:2]} - _lzc_io_out,
         normalizedMantFull[2:1]};	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :382:22, :383:10, :384:10, :386:10, :387:10, :395:18, :404:19, :408:27, :418:24, :421:12, :425:12, :432:19, :437:33, :438:42, :440:28, :442:19, :445:25
      valid_sr_0 <= io_valid_in;	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:446:25
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
    `ifdef FIRRTL_BEFORE_INITIAL	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
      `FIRRTL_BEFORE_INITIAL	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
      automatic logic [31:0] _RANDOM[0:0];	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
      `ifdef INIT_RANDOM_PROLOG_	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
        `INIT_RANDOM_PROLOG_	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
        sr_array_0 = _RANDOM[/*Zero width*/ 1'b0][4:0];	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :445:25
        valid_sr_0 = _RANDOM[/*Zero width*/ 1'b0][5];	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :445:25, :446:25
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
      `FIRRTL_AFTER_INITIAL	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  LZC lzc (	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:432:19
    .io_in  (_diff_T),	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:429:23
    .io_out (_lzc_io_out)
  );
  assign io_out = sr_array_0;	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :445:25
  assign io_valid_out = valid_sr_0;	// \\OneDrive\\Desktop\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala:364:7, :446:25
endmodule

