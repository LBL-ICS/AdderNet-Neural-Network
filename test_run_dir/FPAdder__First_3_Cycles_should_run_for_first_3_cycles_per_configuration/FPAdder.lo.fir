FIRRTL version 1.2.0
circuit FPAdder :
  module FPAdder : @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 235:7]
    input clock : Clock @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 235:7]
    input reset : UInt<1> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 235:7]
    input io_in_a : UInt<6> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 236:14]
    input io_in_b : UInt<6> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 236:14]
    input io_valid_in : UInt<1> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 236:14]
    output io_out : UInt<6> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 236:14]
    output io_valid_out : UInt<1> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 236:14]

    node signA = bits(io_in_a, 5, 5) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 248:22]
    node expA = bits(io_in_a, 4, 3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 249:21]
    node fracA = bits(io_in_a, 2, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 250:22]
    node signB = bits(io_in_b, 5, 5) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 252:22]
    node expB = bits(io_in_b, 4, 3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 253:21]
    node fracB = bits(io_in_b, 2, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 254:22]
    node normFracA = cat(UInt<1>("h1"), fracA) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 257:22]
    node normFracB = cat(UInt<1>("h1"), fracB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 258:22]
    node expAGtB = gt(expA, expB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 262:22]
    node _expDiff_T = sub(expA, expB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 263:32]
    node _expDiff_T_1 = tail(_expDiff_T, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 263:32]
    node _expDiff_T_2 = sub(expB, expA) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 263:45]
    node _expDiff_T_3 = tail(_expDiff_T_2, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 263:45]
    node _expDiff_T_4 = mux(expAGtB, _expDiff_T_1, _expDiff_T_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 263:17]
    node expDiff = pad(_expDiff_T_4, 3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 261:21 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 263:11]
    node _alignedSmall_T = dshr(normFracB, expDiff) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 271:31]
    node _alignedSmall_T_1 = dshr(normFracA, expDiff) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 275:31]
    node _GEN_0 = mux(expAGtB, normFracA, normFracB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 269:17 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 270:18 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 274:18]
    node _GEN_1 = mux(expAGtB, _alignedSmall_T, _alignedSmall_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 269:17 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 271:18 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 275:18]
    node _GEN_2 = mux(expAGtB, expA, expB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 269:17 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 272:12 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 276:12]
    node alignedLarge = pad(_GEN_0, 5) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 266:26]
    node alignedSmall = pad(_GEN_1, 5) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 265:26]
    node _fracSum_T = add(alignedLarge, alignedSmall) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 280:30]
    node fracSum = tail(_fracSum_T, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 280:30]
    node carryOut = bits(fracSum, 4, 4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 281:25]
    node _normFrac_T = bits(fracSum, 4, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 288:24]
    node expOut = _GEN_2 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 267:20]
    node _normExp_T = add(expOut, UInt<1>("h1")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 289:23]
    node _normExp_T_1 = tail(_normExp_T, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 289:23]
    node _normFrac_T_1 = bits(fracSum, 3, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 291:24]
    node _GEN_3 = mux(carryOut, _normFrac_T, _normFrac_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 287:18 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 288:14 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 291:14]
    node _GEN_4 = mux(carryOut, _normExp_T_1, expOut) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 287:18 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 289:13 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 292:13]
    node normExp = _GEN_4 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 285:21]
    node result_hi = cat(UInt<1>("h0"), normExp) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 295:19]
    node normFrac = _GEN_3 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 284:22]
    node result = cat(result_hi, normFrac) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 295:19]
    reg sr_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sr_valid_0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:25]
    reg sr_valid_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sr_valid_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:25]
    reg sr_valid_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sr_valid_2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:25]
    reg sr_valid_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sr_valid_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:25]
    reg sr_valid_4 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sr_valid_4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:25]
    reg sr_valid_5 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sr_valid_5) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:25]
    reg sr_valid_6 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sr_valid_6) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:25]
    reg sr_data_0 : UInt<6>, clock with :
      reset => (UInt<1>("h0"), sr_data_0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 299:20]
    reg sr_data_1 : UInt<6>, clock with :
      reset => (UInt<1>("h0"), sr_data_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 299:20]
    reg sr_data_2 : UInt<6>, clock with :
      reset => (UInt<1>("h0"), sr_data_2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 299:20]
    reg sr_data_3 : UInt<6>, clock with :
      reset => (UInt<1>("h0"), sr_data_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 299:20]
    reg sr_data_4 : UInt<6>, clock with :
      reset => (UInt<1>("h0"), sr_data_4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 299:20]
    reg sr_data_5 : UInt<6>, clock with :
      reset => (UInt<1>("h0"), sr_data_5) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 299:20]
    reg sr_data_6 : UInt<6>, clock with :
      reset => (UInt<1>("h0"), sr_data_6) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 299:20]
    node _T = eq(reset, UInt<1>("h0")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 313:11]
    node _T_1 = eq(reset, UInt<1>("h0")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 314:11]
    node _T_2 = eq(reset, UInt<1>("h0")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 315:11]
    node _T_3 = eq(reset, UInt<1>("h0")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 318:11]
    node _T_4 = eq(reset, UInt<1>("h0")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 319:11]
    node _T_5 = eq(reset, UInt<1>("h0")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 320:11]
    node _T_6 = eq(reset, UInt<1>("h0")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 323:11]
    node _T_7 = eq(reset, UInt<1>("h0")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 324:11]
    node _T_8 = eq(reset, UInt<1>("h0")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 325:11]
    node _T_9 = eq(reset, UInt<1>("h0")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 326:11]
    node _T_10 = eq(reset, UInt<1>("h0")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 327:11]
    node _T_11 = eq(reset, UInt<1>("h0")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 330:11]
    node _T_12 = eq(reset, UInt<1>("h0")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 331:11]
    node _T_13 = eq(reset, UInt<1>("h0")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 334:11]
    node _T_14 = eq(reset, UInt<1>("h0")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 336:13]
    node _T_15 = eq(reset, UInt<1>("h0")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 338:13]
    node _T_16 = eq(reset, UInt<1>("h0")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 340:11]
    node _T_17 = eq(reset, UInt<1>("h0")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 343:11]
    node _T_18 = eq(reset, UInt<1>("h0")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 344:11]
    node _T_19 = eq(reset, UInt<1>("h0")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 347:11]
    node _sr_valid_WIRE_0 = UInt<1>("h0") @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:33 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:33]
    node _sr_valid_WIRE_1 = UInt<1>("h0") @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:33 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:33]
    node _sr_valid_WIRE_2 = UInt<1>("h0") @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:33 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:33]
    node _sr_valid_WIRE_3 = UInt<1>("h0") @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:33 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:33]
    node _sr_valid_WIRE_4 = UInt<1>("h0") @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:33 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:33]
    node _sr_valid_WIRE_5 = UInt<1>("h0") @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:33 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:33]
    node _sr_valid_WIRE_6 = UInt<1>("h0") @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:33 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:33]
    io_out <= sr_data_6 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 308:10]
    io_valid_out <= sr_valid_6 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 307:16]
    sr_valid_0 <= mux(reset, _sr_valid_WIRE_0, io_valid_in) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 301:15]
    sr_valid_1 <= mux(reset, _sr_valid_WIRE_1, sr_valid_0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 302:37]
    sr_valid_2 <= mux(reset, _sr_valid_WIRE_2, sr_valid_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 302:37]
    sr_valid_3 <= mux(reset, _sr_valid_WIRE_3, sr_valid_2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 302:37]
    sr_valid_4 <= mux(reset, _sr_valid_WIRE_4, sr_valid_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 302:37]
    sr_valid_5 <= mux(reset, _sr_valid_WIRE_5, sr_valid_4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 302:37]
    sr_valid_6 <= mux(reset, _sr_valid_WIRE_6, sr_valid_5) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 302:37]
    sr_data_0 <= result @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 304:14]
    sr_data_1 <= sr_data_0 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 305:36]
    sr_data_2 <= sr_data_1 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 305:36]
    sr_data_3 <= sr_data_2 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 305:36]
    sr_data_4 <= sr_data_3 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 305:36]
    sr_data_5 <= sr_data_4 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 305:36]
    sr_data_6 <= sr_data_5 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 305:36]
    printf(clock, and(and(and(UInt<1>("h1"), io_valid_in), _T), UInt<1>("h1")), "[STEP 1: Extract Fields]\n") : printf @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 313:11]
    printf(clock, and(and(and(UInt<1>("h1"), io_valid_in), _T_1), UInt<1>("h1")), "  A = %b => signA: %b | expA: %b | fracA: %b\n", io_in_a, signA, expA, fracA) : printf_1 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 314:11]
    printf(clock, and(and(and(UInt<1>("h1"), io_valid_in), _T_2), UInt<1>("h1")), "  B = %b => signB: %b | expB: %b | fracB: %b\n", io_in_b, signB, expB, fracB) : printf_2 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 315:11]
    printf(clock, and(and(and(UInt<1>("h1"), io_valid_in), _T_3), UInt<1>("h1")), "[STEP 2: Compare Exponents]\n") : printf_3 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 318:11]
    printf(clock, and(and(and(UInt<1>("h1"), io_valid_in), _T_4), UInt<1>("h1")), "  expA: %d, expB: %d\n", expA, expB) : printf_4 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 319:11]
    printf(clock, and(and(and(UInt<1>("h1"), io_valid_in), _T_5), UInt<1>("h1")), "  expDiff: %d => expAGtB: %b\n", expDiff, expAGtB) : printf_5 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 320:11]
    printf(clock, and(and(and(UInt<1>("h1"), io_valid_in), _T_6), UInt<1>("h1")), "[STEP 3: Align Mantissas]\n") : printf_6 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 323:11]
    printf(clock, and(and(and(UInt<1>("h1"), io_valid_in), _T_7), UInt<1>("h1")), "  normFracA (with hidden 1): %b\n", normFracA) : printf_7 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 324:11]
    printf(clock, and(and(and(UInt<1>("h1"), io_valid_in), _T_8), UInt<1>("h1")), "  normFracB (with hidden 1): %b\n", normFracB) : printf_8 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 325:11]
    printf(clock, and(and(and(UInt<1>("h1"), io_valid_in), _T_9), UInt<1>("h1")), "  alignedLarge: %b | alignedSmall: %b\n", alignedLarge, alignedSmall) : printf_9 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 326:11]
    printf(clock, and(and(and(UInt<1>("h1"), io_valid_in), _T_10), UInt<1>("h1")), "  selectedExpOut: %d\n", expOut) : printf_10 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 327:11]
    printf(clock, and(and(and(UInt<1>("h1"), io_valid_in), _T_11), UInt<1>("h1")), "[STEP 4: Add Aligned Mantissas]\n") : printf_11 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 330:11]
    printf(clock, and(and(and(UInt<1>("h1"), io_valid_in), _T_12), UInt<1>("h1")), "  sum: %b (carryOut = %b)\n", fracSum, carryOut) : printf_12 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 331:11]
    printf(clock, and(and(and(UInt<1>("h1"), io_valid_in), _T_13), UInt<1>("h1")), "[STEP 5: Normalize Result]\n") : printf_13 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 334:11]
    printf(clock, and(and(and(and(UInt<1>("h1"), io_valid_in), carryOut), _T_14), UInt<1>("h1")), "  CarryOut = 1 => shift right by 1\n") : printf_14 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 336:13]
    printf(clock, and(and(and(and(UInt<1>("h1"), io_valid_in), eq(carryOut, UInt<1>("h0"))), _T_15), UInt<1>("h1")), "  No CarryOut => no shift\n") : printf_15 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 338:13]
    printf(clock, and(and(and(UInt<1>("h1"), io_valid_in), _T_16), UInt<1>("h1")), "  normFrac: %b | normExp: %d\n", normFrac, normExp) : printf_16 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 340:11]
    printf(clock, and(and(and(UInt<1>("h1"), io_valid_in), _T_17), UInt<1>("h1")), "[STEP 6: Final Result Reassembly]\n") : printf_17 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 343:11]
    printf(clock, and(and(and(UInt<1>("h1"), io_valid_in), _T_18), UInt<1>("h1")), "  Final result = %b\n", result) : printf_18 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 344:11]
    printf(clock, and(and(and(UInt<1>("h1"), io_valid_in), _T_19), UInt<1>("h1")), "[Cycle Info] bw = %d | pd = %d => valid_out: %b | output: %b\n", UInt<3>("h6"), UInt<3>("h7"), io_valid_out, io_out) : printf_19 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 347:11]
