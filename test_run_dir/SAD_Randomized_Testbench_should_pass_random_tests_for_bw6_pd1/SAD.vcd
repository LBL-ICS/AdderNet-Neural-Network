$date
2025-07-24T18:28+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module SAD $end
 $var wire 1 # io_valid_in $end
 $var wire 7 ( absDiffs_2 $end
 $var wire 7 ) absDiffs_1 $end
 $var wire 7 * absDiffs_0 $end
 $var wire 1 - reset $end
 $var wire 7 . absDiffs_3 $end
 $var wire 6 / io_a_3 $end
 $var wire 6 0 io_a_0 $end
 $var wire 6 2 io_a_2 $end
 $var wire 6 3 io_a_1 $end
 $var wire 1 7 adderTree $end
 $var wire 1 < validRegs_0 $end
 $var wire 6 ? io_b_3 $end
 $var wire 6 @ io_b_2 $end
 $var wire 6 A io_b_1 $end
 $var wire 6 B io_b_0 $end
 $var wire 1 C io_valid_out $end
 $var wire 1 D clock $end
 $var wire 9 I io_sum $end
 $var wire 1 L absvals_2 $end
 $var wire 1 M absvals_1 $end
 $var wire 1 N absvals_0 $end
 $var wire 1 O subtractors_3 $end
 $var wire 1 P absvals_3 $end
 $var wire 1 R subtractors_0 $end
 $var wire 1 S subtractors_1 $end
 $var wire 1 T subtractors_2 $end
  $scope module absvals_2 $end
   $var wire 7 E io_out $end
   $var wire 7 Q io_in $end
  $upscope $end
  $scope module absvals_1 $end
   $var wire 7 9 io_out $end
   $var wire 7 H io_in $end
  $upscope $end
  $scope module subtractors_0 $end
   $var wire 7 , io_diff $end
   $var wire 6 = io_b $end
   $var wire 6 > io_a $end
  $upscope $end
  $scope module absvals_0 $end
   $var wire 7 ' io_in $end
   $var wire 7 F io_out $end
  $upscope $end
  $scope module subtractors_1 $end
   $var wire 6 ! io_b $end
   $var wire 6 " io_a $end
   $var wire 7 8 io_diff $end
  $upscope $end
  $scope module adderTree $end
   $var wire 7 1 io_in_3 $end
   $var wire 7 4 io_in_0 $end
   $var wire 7 5 io_in_1 $end
   $var wire 7 6 io_in_2 $end
   $var wire 9 G io_out $end
  $upscope $end
  $scope module subtractors_2 $end
   $var wire 6 $ io_b $end
   $var wire 6 % io_a $end
   $var wire 7 J io_diff $end
  $upscope $end
  $scope module subtractors_3 $end
   $var wire 7 + io_diff $end
   $var wire 6 : io_a $end
   $var wire 6 ; io_b $end
  $upscope $end
  $scope module absvals_3 $end
   $var wire 7 & io_in $end
   $var wire 7 K io_out $end
  $upscope $end
$upscope $end
$enddefinitions $end
$dumpvars
07
0<
0C
0D
0L
0M
0N
0O
0P
0R
0S
0T
b000000000 I
b000000000 G
b000000 ?
b000000 >
b000000 A
b000000 @
b000000 B
b0000000 K
b0000000 J
b000000 ;
b000000 :
b0000000 Q
b000000 =
b000000 /
b0000000 E
b000000 0
b000000 3
b0000000 F
b000000 2
b0000000 H
b0000000 5
b000000 !
b0000000 4
b0000000 6
b000000 "
b0000000 9
b000000 %
b0000000 8
b000000 $
b0000000 +
b0000000 *
b0000000 ,
b0000000 .
b0000000 1
b0000000 '
b0000000 &
b0000000 )
b0000000 (
0#
0-
$end
#0
1-
#1
1D
#6
0D
0-
