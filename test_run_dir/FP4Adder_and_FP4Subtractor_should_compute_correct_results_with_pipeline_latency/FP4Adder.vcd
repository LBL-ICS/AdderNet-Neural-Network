$date
2025-07-25T01:05+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module FP4Adder $end
 $var wire 3 ! normExp $end
 $var wire 2 " manA $end
 $var wire 2 # manB $end
 $var wire 3 $ expDiff $end
 $var wire 3 % manB_ext $end
 $var wire 1 & reset $end
 $var wire 6 ' sumRaw $end
 $var wire 6 ( result $end
 $var wire 3 ) finalMan $end
 $var wire 5 * normalizedSum $end
 $var wire 5 + alignedManA $end
 $var wire 1 , lzc $end
 $var wire 5 - alignedManB $end
 $var wire 4 . pipeRegs_2 $end
 $var wire 3 / manA_ext $end
 $var wire 4 0 pipeRegs_1 $end
 $var wire 4 1 pipeRegs_0 $end
 $var wire 1 2 clock $end
 $var wire 4 4 io_b $end
 $var wire 4 5 io_a $end
 $var wire 4 6 io_out $end
 $var wire 2 7 expB $end
 $var wire 2 8 expA $end
 $var wire 3 : outExp $end
  $scope module lzc $end
   $var wire 3 3 io_out $end
   $var wire 6 9 io_in $end
  $upscope $end
$upscope $end
$enddefinitions $end
$dumpvars
b00 8
02
b00 7
b000000 9
b000000 '
b000000 (
b000 3
b00000 +
b00000 *
b00000 -
b000 :
b00 #
b00 "
b000 )
b000 %
b000 $
b000 /
b0000 4
b0000 5
b0000 0
b0000 1
b0000 .
0&
b000 !
0,
b0000 6
$end
#0
b001 !
b100 %
1&
b100000 '
b001100 (
b100 )
b10000 *
b10000 +
b10000 -
b100 /
b001 3
b011111 9
b001 :
#1
12
#6
02
0&
