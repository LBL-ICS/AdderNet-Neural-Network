FIRRTL version 1.2.0
circuit FP4Adder :
  module LZC : @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 223:7]
    input clock : Clock @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 223:7]
    input reset : UInt<1> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 223:7]
    input io_in : UInt<6> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 224:14]
    output io_out : UInt<3> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 224:14]

    node _io_out_T = bits(io_in, 3, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_1 = bits(_io_out_T, 1, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_2 = bits(_io_out_T_1, 0, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_3 = bits(_io_out_T_1, 1, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_4 = cat(_io_out_T_2, _io_out_T_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_5 = bits(_io_out_T, 3, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_6 = bits(_io_out_T_5, 0, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_7 = bits(_io_out_T_5, 1, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_8 = cat(_io_out_T_6, _io_out_T_7) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_9 = cat(_io_out_T_4, _io_out_T_8) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_10 = bits(io_in, 5, 4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_11 = bits(_io_out_T_10, 0, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_12 = bits(_io_out_T_10, 1, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_13 = cat(_io_out_T_11, _io_out_T_12) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_14 = cat(_io_out_T_9, _io_out_T_13) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_15 = bits(_io_out_T_14, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_16 = bits(_io_out_T_14, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_17 = bits(_io_out_T_14, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_18 = bits(_io_out_T_14, 3, 3) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_19 = bits(_io_out_T_14, 4, 4) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_20 = bits(_io_out_T_14, 5, 5) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_21 = mux(_io_out_T_19, UInt<3>("h4"), UInt<3>("h5")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_22 = mux(_io_out_T_18, UInt<2>("h3"), _io_out_T_21) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_23 = mux(_io_out_T_17, UInt<2>("h2"), _io_out_T_22) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_24 = mux(_io_out_T_16, UInt<1>("h1"), _io_out_T_23) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_25 = mux(_io_out_T_15, UInt<1>("h0"), _io_out_T_24) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    io_out <= _io_out_T_25 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:10]

  module FP4Adder : @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 242:7]
    input clock : Clock @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 242:7]
    input reset : UInt<1> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 242:7]
    input io_a : UInt<4> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 249:14]
    input io_b : UInt<4> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 249:14]
    output io_out : UInt<4> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 249:14]

    inst lzc of LZC @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 285:19]
    node expA = bits(io_a, 3, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 256:18]
    node manA = bits(io_a, 1, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 257:18]
    node expB = bits(io_b, 3, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 258:18]
    node manB = bits(io_b, 1, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 259:18]
    node manA_ext = cat(UInt<1>("h1"), manA) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 262:21]
    node manB_ext = cat(UInt<1>("h1"), manB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 263:21]
    node _expDiff_T = cvt(expA) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 266:23]
    node _expDiff_T_1 = cvt(expB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 266:35]
    node _expDiff_T_2 = sub(_expDiff_T, _expDiff_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 266:28]
    node _expDiff_T_3 = tail(_expDiff_T_2, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 266:28]
    node expDiff = asSInt(_expDiff_T_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 266:28]
    node _T = geq(expDiff, asSInt(UInt<1>("h0"))) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 272:16]
    node _alignedManA_T = shl(manA_ext, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 273:30]
    node _alignedManB_T = shl(manB_ext, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 274:30]
    node _alignedManB_T_1 = asUInt(expDiff) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 274:54]
    node _alignedManB_T_2 = dshr(_alignedManB_T, _alignedManB_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 274:43]
    node _alignedManA_T_1 = shl(manA_ext, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 276:30]
    node _alignedManA_T_2 = sub(asSInt(UInt<1>("h0")), expDiff) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 276:47]
    node _alignedManA_T_3 = tail(_alignedManA_T_2, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 276:47]
    node _alignedManA_T_4 = asSInt(_alignedManA_T_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 276:47]
    node _alignedManA_T_5 = asUInt(_alignedManA_T_4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 276:57]
    node _alignedManA_T_6 = dshr(_alignedManA_T_1, _alignedManA_T_5) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 276:43]
    node _alignedManB_T_3 = shl(manB_ext, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 277:30]
    node _GEN_0 = mux(_T, _alignedManA_T, _alignedManA_T_6) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 272:24 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 273:17 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 276:17]
    node _GEN_1 = mux(_T, _alignedManB_T_2, _alignedManB_T_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 272:24 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 274:17 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 277:17]
    node alignedManA = _GEN_0 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 269:25]
    node alignedManB = _GEN_1 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 270:25]
    node _sumRaw_T = add(alignedManA, alignedManB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 282:25]
    node sumRaw = _sumRaw_T @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 281:20 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 282:10]
    node _lzc_io_in_T = bits(sumRaw, 5, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 286:23]
    node _lzc_io_in_T_1 = not(_lzc_io_in_T) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 286:16]
    node _T_1 = bits(sumRaw, 5, 5) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 293:14]
    node _T_2 = eq(_T_1, UInt<1>("h1")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 293:29]
    node _normalizedSum_T = shr(sumRaw, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 295:29]
    node _normExp_T = geq(expDiff, asSInt(UInt<1>("h0"))) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 296:29]
    node _normExp_T_1 = mux(_normExp_T, expA, expB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 296:20]
    node _normExp_T_2 = asSInt(_normExp_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 296:49]
    node _normExp_T_3 = add(_normExp_T_2, asSInt(UInt<2>("h1"))) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 296:56]
    node _normExp_T_4 = tail(_normExp_T_3, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 296:56]
    node _normExp_T_5 = asSInt(_normExp_T_4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 296:56]
    node _normalizedSum_T_1 = dshl(sumRaw, lzc.io_out) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 299:29]
    node _normExp_T_6 = geq(expDiff, asSInt(UInt<1>("h0"))) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 300:29]
    node _normExp_T_7 = mux(_normExp_T_6, expA, expB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 300:20]
    node _normExp_T_8 = asSInt(_normExp_T_7) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 300:49]
    node _normExp_T_9 = asSInt(lzc.io_out) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 300:70]
    node _normExp_T_10 = sub(_normExp_T_8, _normExp_T_9) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 300:56]
    node _normExp_T_11 = tail(_normExp_T_10, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 300:56]
    node _normExp_T_12 = asSInt(_normExp_T_11) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 300:56]
    node _GEN_2 = mux(_T_2, _normalizedSum_T, _normalizedSum_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 293:38 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 295:19 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 299:19]
    node _GEN_3 = mux(_T_2, _normExp_T_5, _normExp_T_12) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 293:38 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 296:13 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 300:13]
    node normExp = _GEN_3 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 291:21]
    node _outExp_T = lt(normExp, asSInt(UInt<1>("h0"))) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 304:28]
    node _outExp_T_1 = asUInt(normExp) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 304:48]
    node outExp = mux(_outExp_T, UInt<1>("h0"), _outExp_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 304:19]
    node normalizedSum = bits(_GEN_2, 4, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 290:27]
    node finalMan = bits(normalizedSum, 4, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 307:31]
    node result = cat(outExp, finalMan) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 310:19]
    reg pipeRegs_0 : UInt<4>, clock with :
      reset => (UInt<1>("h0"), pipeRegs_0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 313:25]
    reg pipeRegs_1 : UInt<4>, clock with :
      reset => (UInt<1>("h0"), pipeRegs_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 313:25]
    reg pipeRegs_2 : UInt<4>, clock with :
      reset => (UInt<1>("h0"), pipeRegs_2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 313:25]
    node _pipeRegs_WIRE_0 = UInt<4>("h0") @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 313:33 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 313:33]
    node _pipeRegs_WIRE_1 = UInt<4>("h0") @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 313:33 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 313:33]
    node _pipeRegs_WIRE_2 = UInt<4>("h0") @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 313:33 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 313:33]
    io_out <= pipeRegs_2 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 318:10]
    lzc.clock <= clock
    lzc.reset <= reset
    lzc.io_in <= _lzc_io_in_T_1 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 286:13]
    pipeRegs_0 <= bits(mux(reset, _pipeRegs_WIRE_0, result), 3, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 313:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 313:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 314:15]
    pipeRegs_1 <= mux(reset, _pipeRegs_WIRE_1, pipeRegs_0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 313:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 313:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 316:17]
    pipeRegs_2 <= mux(reset, _pipeRegs_WIRE_2, pipeRegs_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 313:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 313:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 316:17]
