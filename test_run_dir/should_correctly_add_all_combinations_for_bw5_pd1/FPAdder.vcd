$date
2025-07-25T23:54+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module FPAdder $end
 $var wire 2 ! aligned_exp $end
 $var wire 4 " sum_mant $end
 $var wire 3 # out_hi $end
 $var wire 5 $ io_in_a $end
 $var wire 5 % io_in_b $end
 $var wire 2 & exp_b $end
 $var wire 2 ' final_mant $end
 $var wire 2 ( man_b $end
 $var wire 2 ) man_a $end
 $var wire 3 * man_b_shifted $end
 $var wire 3 + norm_man_b $end
 $var wire 3 , norm_man_a $end
 $var wire 1 - clock $end
 $var wire 2 . exp_diff $end
 $var wire 1 / reset $end
 $var wire 1 0 carry $end
 $var wire 5 1 io_out $end
 $var wire 5 2 out $end
 $var wire 1 3 io_valid $end
 $var wire 2 4 exp_out $end
 $var wire 2 5 final_exp $end
 $var wire 3 6 man_a_shifted $end
 $var wire 1 7 io_valid_r $end
 $var wire 5 8 io_out_r $end
 $var wire 2 9 exp_a $end
 $var wire 3 : sum_norm $end
$upscope $end
$enddefinitions $end
$dumpvars
00
b00 9
03
07
b00 .
b00 5
b00 4
b00 )
b000 6
b00 (
b00000 %
b00 '
b00000 $
b00 &
b00 !
b000 :
b00000 1
b00000 2
b0000 "
b000 #
b00000 8
b000 +
b000 *
b000 ,
0-
0/
$end
#0
b1000 "
b001 #
b100 *
b100 +
b100 ,
1/
10
b00100 2
13
b01 4
b01 5
b100 6
b100 :
#1
b00100 1
17
b00100 8
1-
#6
0-
0/
#11
1-
#16
b1001 "
b00001 %
b01 (
b101 *
b101 +
0-
#21
1-
#26
b1010 "
b00101 2
b00010 %
b01 '
b10 (
b110 *
b101 :
b110 +
0-
#31
b00101 1
b00101 8
1-
#36
b1011 "
b00011 %
b11 (
b111 *
b111 +
0-
#41
1-
#46
b01 !
b0110 "
b00100 %
b01 &
b10 '
b00 (
b100 *
b100 +
0-
b01 .
00
b00110 2
b010 6
b110 :
#51
b00110 1
b00110 8
1-
#56
b0111 "
b00111 2
b00101 %
b11 '
b01 (
b101 *
b111 :
b101 +
0-
#61
b00111 1
b00111 8
1-
#66
b1000 "
b010 #
b00110 %
b00 '
b10 (
b110 *
b110 +
0-
10
b01000 2
b10 4
b10 5
b100 :
#71
b01000 1
b01000 8
1-
#76
b1001 "
b00111 %
b11 (
b111 *
b111 +
0-
#81
1-
#86
0-
