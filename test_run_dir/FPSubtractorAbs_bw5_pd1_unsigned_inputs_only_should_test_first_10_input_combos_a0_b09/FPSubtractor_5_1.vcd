$date
2025-08-12T18:47+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module FPSubtractor_5_1 $end
 $var wire 5 ! io_in_a $end
 $var wire 5 " io_in_b $end
 $var wire 1 # io_valid_in $end
 $var wire 1 $ io_valid_out $end
 $var wire 1 & lzc $end
 $var wire 2 ' manA $end
 $var wire 2 ( maxExp $end
 $var wire 2 ) manB $end
 $var wire 4 * alignedB $end
 $var wire 4 + alignedA $end
 $var wire 2 , expDiff $end
 $var wire 4 - diff $end
 $var wire 5 . sr_array_0 $end
 $var wire 1 / clock $end
 $var wire 2 0 normalizedMant $end
 $var wire 4 1 aExt $end
 $var wire 5 2 aVal $end
 $var wire 1 4 reset $end
 $var wire 5 5 io_out $end
 $var wire 6 7 result $end
 $var wire 3 8 bExt_hi $end
 $var wire 11 9 normalizedMantFull $end
 $var wire 4 : result_hi $end
 $var wire 2 ; expB $end
 $var wire 2 < expA $end
 $var wire 3 = aExt_hi $end
 $var wire 4 > bExt $end
 $var wire 5 ? bVal $end
 $var wire 1 A valid_sr_0 $end
 $var wire 3 B adjustedExp $end
  $scope module lzc $end
   $var wire 4 % rev $end
   $var wire 3 3 io_out $end
   $var wire 1 6 any $end
   $var wire 4 @ io_in $end
  $upscope $end
$upscope $end
$enddefinitions $end
$dumpvars
b000000 7
b0000 @
04
b000 B
b00 <
b0000 >
06
b00 ;
b00 0
b00000 !
b00 )
0A
b00000 "
b00 (
b00 '
b000 8
b000 3
b00 ,
b00000 .
b000 =
b0000 %
b00000 2
b00000 5
b0000 -
b0000 *
b0000 +
b00000 ?
b00000000000 9
0#
0$
b0000 1
0&
b0000 :
0/
$end
#0
b1000 1
b100 3
14
b100 8
b1000 *
b1000 +
b100 =
b1000 >
#1
1/
#6
1#
04
0/
#11
1A
1$
1/
#16
b0010 @
b00001 "
b0100 %
b01 '
b1010 +
b0010 -
0/
b1010 1
b00001 2
b010 3
16
b00000001000 9
b101 =
#21
1/
#26
b0100 @
b1100 1
b00010 "
b00010 2
b001 3
b0010 %
b10 '
b1100 +
b0100 -
b110 =
0/
#31
1/
#36
b0110 @
b00011 "
b0110 %
b11 '
b1110 +
b0110 -
0/
b10 0
b1110 1
b00011 2
b000010 7
b00000001100 9
b111 =
#41
b00010 5
b00010 .
1/
#46
b0100 @
b00100 "
b0010 %
b00 '
b01 (
b0100 *
b1000 +
b01 ,
b0100 -
0/
b00 0
b1000 1
b00100 2
b000000 7
b00000001000 9
b01 <
b100 =
#51
b00000 5
b00000 .
1/
#56
b0110 @
b00101 "
b0110 %
b01 '
b1010 +
b0110 -
0/
b10 0
b1010 1
b00101 2
b000010 7
b00000001100 9
b101 =
#61
b00010 5
b00010 .
1/
#66
b1000 @
b00110 "
b001 B
b0001 %
b10 '
b1100 +
b1000 -
0/
b00 0
b1100 1
b00110 2
b000 3
b000100 7
b00000001000 9
b0001 :
b110 =
#71
b00100 5
b00100 .
1/
#76
b1010 @
b00111 "
b0101 %
b11 '
b1110 +
b1010 -
0/
b01 0
b1110 1
b00111 2
b000101 7
b00000001010 9
b111 =
#81
b00101 5
b00101 .
1/
#86
b0110 @
b01000 "
b0110 %
b00 '
b10 (
b0010 *
b1000 +
b10 ,
b0110 -
0/
b10 0
b1000 1
b01000 2
b001 3
b000110 7
b00000001100 9
b10 <
b100 =
#91
b00110 5
b00110 .
1/
#96
b1000 @
b01001 "
b010 B
b0001 %
b01 '
b1010 +
b1000 -
0/
b00 0
b1010 1
b01001 2
b000 3
b001000 7
b00000001000 9
b0010 :
b101 =
#101
b01000 5
b01000 .
1/
#106
b0000 @
b00000 "
b000 B
0#
b0000 %
b00 '
b00 (
b1000 *
b1000 +
b00 ,
b0000 -
0/
b1000 1
b00000 2
b100 3
06
b000000 7
b00000000000 9
b0000 :
b00 <
b100 =
#111
0A
0$
b00000 5
b00000 .
1/
#116
0/
