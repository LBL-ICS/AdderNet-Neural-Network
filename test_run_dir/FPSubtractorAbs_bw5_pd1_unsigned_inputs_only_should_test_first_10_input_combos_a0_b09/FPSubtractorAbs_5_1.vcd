$date
2025-08-23T16:09+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module FPSubtractorAbs_5_1 $end
 $var wire 4 ! expDiffS $end
 $var wire 1 " sr_valid_0 $end
 $var wire 4 # expDiffU $end
 $var wire 5 $ io_in_a $end
 $var wire 5 % io_in_b $end
 $var wire 4 & den $end
 $var wire 1 ' io_valid_in $end
 $var wire 4 ) normFracA $end
 $var wire 4 * normFracB $end
 $var wire 4 + eB_w $end
 $var wire 4 , largeMant $end
 $var wire 1 - mantAGtB $end
 $var wire 5 . sr_data_0 $end
 $var wire 1 / dropHidden $end
 $var wire 4 0 newExp $end
 $var wire 1 1 expA_isZero $end
 $var wire 1 2 aIsLarger $end
 $var wire 1 3 bFracNZ $end
 $var wire 4 4 shiftS $end
 $var wire 1 5 reset $end
 $var wire 1 6 oneInf $end
 $var wire 4 7 smallMant $end
 $var wire 3 8 eB_eS $end
 $var wire 3 9 resultFrac $end
 $var wire 2 : resultExp $end
 $var wire 1 ; aIsNaN $end
 $var wire 5 < result $end
 $var wire 5 = specialOut $end
 $var wire 1 > isZero $end
 $var wire 1 ? bIsNaN $end
 $var wire 4 @ eA_w $end
 $var wire 4 A shiftCap $end
 $var wire 1 B bIsInf $end
 $var wire 4 C sCap $end
 $var wire 1 D expsEq $end
 $var wire 1 E expB_isZero $end
 $var wire 1 F expAGtB $end
 $var wire 1 G eB_w_sign $end
 $var wire 4 H eA $end
 $var wire 4 I eB $end
 $var wire 4 J sRaw $end
 $var wire 4 K kExp $end
 $var wire 4 L encE $end
 $var wire 4 M shiftedFrac $end
 $var wire 1 N io_valid_out $end
 $var wire 3 O fracFromDen $end
 $var wire 1 P lzc $end
 $var wire 1 Q specialHit $end
 $var wire 3 R eA_eS $end
 $var wire 1 S anyNaN $end
 $var wire 3 T qNaNFrac $end
 $var wire 1 U clock $end
 $var wire 3 V fracFromShifted $end
 $var wire 1 X eA_w_sign $end
 $var wire 1 Y aIsInf $end
 $var wire 1 Z bothInf $end
 $var wire 5 [ io_out $end
 $var wire 3 \ fracA $end
 $var wire 3 ] fracB $end
 $var wire 4 _ diffMant $end
 $var wire 5 ` packedFinite $end
 $var wire 1 a aFracNZ $end
 $var wire 4 b expOut $end
 $var wire 2 c expB $end
 $var wire 2 d expA $end
  $scope module lzc $end
   $var wire 4 ( rev $end
   $var wire 3 W io_out $end
   $var wire 1 ^ any $end
   $var wire 4 e io_in $end
  $upscope $end
$upscope $end
$enddefinitions $end
$dumpvars
01
02
03
05
06
b00 :
0;
0>
0?
0B
b00000 %
b00000 $
0D
0E
0F
0G
b00000 .
0N
0P
0Q
b0000 #
0S
b0000 !
0U
b0000 ,
0X
0Y
b0000 *
0Z
b00000 =
b0000 +
b00000 <
b0000 (
b0000 )
b0000 &
0^
b0000 4
b000 W
b000 V
0a
b0000 0
b000 R
b000 T
b000 ]
b0000 7
b000 \
b0000 C
b0000 @
b0000 A
b0000 L
b000 O
b00000 [
b0000 M
b0000 J
b0000 K
b0000 H
b0000 I
b00000 `
b000 9
b000 8
b00 d
b00 c
b0000 e
b0000 b
b0000 _
0"
0'
0-
0/
$end
#0
b1111 @
11
b0100 4
1D
b100 T
15
1E
b100 W
b1111 +
b0001 L
1>
#1
1U
#6
05
0U
1'
#11
1"
1U
1N
#16
b00001 `
b00001 %
b0001 e
b0001 &
b1000 (
b0001 *
b0001 ,
b1110 L
b1000 M
b001 O
b1101 0
13
b0011 4
0U
b011 W
b001 9
b00001 <
b001 ]
0>
1^
b0001 _
#21
1U
b00001 [
b00001 .
#26
b00010 `
b00010 %
b0010 e
b0010 &
b0100 (
b0010 *
b0010 ,
b1111 L
b010 O
b1110 0
b0010 4
0U
b010 W
b010 9
b00010 <
b010 ]
b0010 _
#31
1U
b00010 [
b00010 .
#36
b00011 `
b00011 %
b0011 e
b0011 &
b1100 (
b0011 *
b0011 ,
b1100 M
b011 O
0U
b100 V
b011 9
b00011 <
b011 ]
b0011 _
#41
1U
b00011 [
b00011 .
#46
b00100 `
b00100 %
b0100 e
b0100 &
b0010 (
b0100 *
b0100 ,
b0000 L
b1000 M
b100 O
b1111 0
b0001 4
0U
b000 V
b001 W
b100 9
b00100 <
b100 ]
b0100 _
#51
1U
b00100 [
b00100 .
#56
b00101 `
b00101 %
b0101 e
b0101 &
b1010 (
b0101 *
b0101 ,
b1010 M
b101 O
0U
b010 V
b101 9
b00101 <
b101 ]
b0101 _
#61
1U
b00101 [
b00101 .
#66
b00110 `
b00110 %
b0110 e
b0110 &
b0110 (
b0110 *
b0110 ,
b1100 M
b110 O
0U
b100 V
b110 9
b00110 <
b110 ]
b0110 _
#71
1U
b00110 [
b00110 .
#76
b00111 `
b00111 %
b0111 e
b0111 &
b1110 (
b0111 *
b0111 ,
b1110 M
b111 O
0U
b110 V
b111 9
b00111 <
b111 ]
b0111 _
#81
1U
b00111 [
b00111 .
#86
b0001 C
0E
b0001 J
b0001 L
b1000 M
b100 O
0U
b000 V
b000 W
b000 ]
b1000 _
b01000 `
b01 c
b01000 %
b1000 e
b0100 &
b0001 (
b1000 *
b0000 +
b1000 ,
1/
b0000 0
03
b0000 4
b001 8
b000 9
b01 :
b01000 <
#91
1U
b01000 [
b01000 .
#96
b01001 `
b01001 %
b1001 e
b1001 (
b1001 *
b1001 ,
b1001 M
13
0U
b001 V
b001 9
b01001 <
b001 ]
b1001 _
#101
1U
b01001 [
b01001 .
#106
b0000 C
1E
b0000 J
b0000 M
b000 O
0U
b000 V
b100 W
b000 ]
0^
b0000 _
b00000 `
b00 c
b00000 %
b0000 e
b0000 &
0'
b0000 (
b0000 *
b1111 +
b0000 ,
0/
03
b0100 4
b000 8
b000 9
b00 :
b00000 <
1>
#111
0"
1U
0N
#116
0U
