FIRRTL version 1.2.0
circuit FPSubtractor_5_1 :
  module LZC : @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 230:7]
    input clock : Clock @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 230:7]
    input reset : UInt<1> @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 230:7]
    input io_in : UInt<4> @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 231:14]
    output io_out : UInt<3> @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 231:14]
    output io_isZero : UInt<1> @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 231:14]

    node _rev_T = bits(io_in, 1, 0) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 236:22]
    node _rev_T_1 = bits(_rev_T, 0, 0) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 236:22]
    node _rev_T_2 = bits(_rev_T, 1, 1) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 236:22]
    node _rev_T_3 = cat(_rev_T_1, _rev_T_2) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 236:22]
    node _rev_T_4 = bits(io_in, 3, 2) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 236:22]
    node _rev_T_5 = bits(_rev_T_4, 0, 0) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 236:22]
    node _rev_T_6 = bits(_rev_T_4, 1, 1) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 236:22]
    node _rev_T_7 = cat(_rev_T_5, _rev_T_6) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 236:22]
    node rev = cat(_rev_T_3, _rev_T_7) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 236:22]
    node any = orr(rev) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 237:19]
    node _io_isZero_T = eq(any, UInt<1>("h0")) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 238:16]
    node _io_out_T = bits(rev, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_1 = bits(rev, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_2 = bits(rev, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_3 = bits(rev, 3, 3) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_4 = mux(_io_out_T_2, UInt<2>("h2"), UInt<2>("h3")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_5 = mux(_io_out_T_1, UInt<1>("h1"), _io_out_T_4) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_6 = mux(_io_out_T, UInt<1>("h0"), _io_out_T_5) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_7 = mux(any, _io_out_T_6, UInt<3>("h4")) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 239:19]
    io_out <= _io_out_T_7 @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 239:13]
    io_isZero <= _io_isZero_T @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 238:13]

  module FPSubtractor_5_1 : @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 436:7]
    input clock : Clock @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 436:7]
    input reset : UInt<1> @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 436:7]
    input io_in_a : UInt<5> @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 439:14]
    input io_in_b : UInt<5> @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 439:14]
    input io_valid_in : UInt<1> @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 439:14]
    output io_out : UInt<5> @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 439:14]
    output io_valid_out : UInt<1> @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 439:14]

    inst lzc of LZC @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 487:19]
    node _T = geq(io_in_a, io_in_b) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 453:16]
    node _GEN_0 = mux(_T, io_in_a, io_in_b) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 453:28 454:10 457:10]
    node _GEN_1 = mux(_T, io_in_b, io_in_a) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 453:28 455:10 458:10]
    node aVal = _GEN_0 @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 451:18]
    node expA = bits(aVal, 3, 2) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 461:18]
    node manA = bits(aVal, 1, 0) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 462:18]
    node bVal = _GEN_1 @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 452:18]
    node expB = bits(bVal, 3, 2) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 463:18]
    node manB = bits(bVal, 1, 0) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 464:18]
    node _expDiff_T = geq(expA, expB) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 466:26]
    node _expDiff_T_1 = sub(expA, expB) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 466:40]
    node _expDiff_T_2 = tail(_expDiff_T_1, 1) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 466:40]
    node _expDiff_T_3 = sub(expB, expA) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 466:53]
    node _expDiff_T_4 = tail(_expDiff_T_3, 1) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 466:53]
    node expDiff = mux(_expDiff_T, _expDiff_T_2, _expDiff_T_4) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 466:20]
    node aExt_hi = cat(UInt<1>("h1"), manA) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 468:17]
    node aExt = cat(aExt_hi, UInt<1>("h0")) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 468:17]
    node bExt_hi = cat(UInt<1>("h1"), manB) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 469:17]
    node bExt = cat(bExt_hi, UInt<1>("h0")) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 469:17]
    node _T_1 = geq(expA, expB) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 475:13]
    node _alignedB_T = dshr(bExt, expDiff) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 477:22]
    node _alignedA_T = dshr(aExt, expDiff) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 480:22]
    node _GEN_2 = mux(_T_1, aExt, _alignedA_T) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 475:22 476:14 480:14]
    node _GEN_3 = mux(_T_1, _alignedB_T, bExt) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 475:22 477:14 481:14]
    node _GEN_4 = mux(_T_1, expA, expB) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 475:22 478:12 482:12]
    node alignedA = _GEN_2 @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 471:22]
    node alignedB = _GEN_3 @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 472:22]
    node _diff_T = sub(alignedA, alignedB) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 485:23]
    node diff = tail(_diff_T, 1) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 485:23]
    node normalizedMantFull = dshl(diff, lzc.io_out) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 491:33]
    node normalizedMant = bits(normalizedMantFull, 2, 1) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 492:42]
    node maxExp = _GEN_4 @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 473:20]
    node _adjustedExp_T = geq(maxExp, lzc.io_out) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 494:32]
    node _adjustedExp_T_1 = sub(maxExp, lzc.io_out) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 494:49]
    node _adjustedExp_T_2 = tail(_adjustedExp_T_1, 1) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 494:49]
    node adjustedExp = mux(_adjustedExp_T, _adjustedExp_T_2, UInt<1>("h0")) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 494:24]
    node result_hi = cat(UInt<1>("h0"), adjustedExp) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 495:19]
    node result = cat(result_hi, normalizedMant) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 495:19]
    reg sr_array_0 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), sr_array_0) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 497:25]
    reg valid_sr_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), valid_sr_0) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 498:25]
    node _sr_array_WIRE_0 = UInt<5>("h0") @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 497:{33,33}]
    node _valid_sr_WIRE_0 = UInt<1>("h0") @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 498:{33,33}]
    io_out <= sr_array_0 @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 507:10]
    io_valid_out <= valid_sr_0 @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 508:16]
    lzc.clock <= clock
    lzc.reset <= reset
    lzc.io_in <= diff @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 488:13]
    sr_array_0 <= bits(mux(reset, _sr_array_WIRE_0, result), 4, 0) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 497:{25,25} 500:15]
    valid_sr_0 <= mux(reset, _valid_sr_WIRE_0, io_valid_in) @[Volumes/MacExternal/DevProjects/ScoolProjects/AdderNet-Neural-Network/src/main/scala/Fundamental_IC.scala 498:{25,25} 501:15]
