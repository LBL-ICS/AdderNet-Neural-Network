$date
2025-07-25T23:54+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module FPAdder $end
 $var wire 2 ! aligned_exp $end
 $var wire 3 " sum_mant $end
 $var wire 3 # out_hi $end
 $var wire 4 $ io_in_a $end
 $var wire 4 % io_in_b $end
 $var wire 2 & exp_b $end
 $var wire 1 ' final_mant $end
 $var wire 1 ( man_b $end
 $var wire 1 ) man_a $end
 $var wire 2 * man_b_shifted $end
 $var wire 2 + norm_man_b $end
 $var wire 1 , io_valid_r_1 $end
 $var wire 1 - io_valid_r_2 $end
 $var wire 1 . io_valid_r_3 $end
 $var wire 2 / norm_man_a $end
 $var wire 1 0 clock $end
 $var wire 1 1 io_valid_r_4 $end
 $var wire 2 2 exp_diff $end
 $var wire 1 3 io_valid_r_5 $end
 $var wire 1 4 io_valid_r_6 $end
 $var wire 1 5 reset $end
 $var wire 1 6 carry $end
 $var wire 4 7 io_out $end
 $var wire 4 8 out $end
 $var wire 1 9 io_valid $end
 $var wire 2 : exp_out $end
 $var wire 2 ; final_exp $end
 $var wire 2 < man_a_shifted $end
 $var wire 1 = io_valid_r $end
 $var wire 4 > io_out_r $end
 $var wire 4 ? io_out_r_4 $end
 $var wire 2 @ exp_a $end
 $var wire 4 A io_out_r_3 $end
 $var wire 4 B io_out_r_6 $end
 $var wire 4 C io_out_r_5 $end
 $var wire 2 D sum_norm $end
 $var wire 4 E io_out_r_2 $end
 $var wire 4 F io_out_r_1 $end
$upscope $end
$enddefinitions $end
$dumpvars
00
b0000 E
01
b0000 B
b0000 C
03
04
b0000 A
05
b00 <
b0000 >
06
b00 ;
b0000 ?
b00 :
09
b00 /
0=
b0000 F
b00 2
b00 &
b00 +
b00 *
b00 !
b0000 $
b0000 %
b000 #
b000 "
0'
0(
0)
b00 @
b0000 8
0,
0-
b00 D
0.
b0000 7
$end
#0
b100 "
b001 #
b10 D
b10 *
b10 +
b10 /
15
16
b0010 8
19
b01 :
b01 ;
b10 <
#1
10
11
13
14
1,
1-
1=
1.
b0010 >
#6
00
05
#11
10
b0010 F
#16
00
