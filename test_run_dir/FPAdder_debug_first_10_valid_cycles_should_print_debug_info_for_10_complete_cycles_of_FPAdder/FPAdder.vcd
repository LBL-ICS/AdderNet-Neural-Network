$date
2025-07-29T22:08+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module FPAdder $end
 $var wire 1 ! sr_valid_2 $end
 $var wire 1 " sr_valid_1 $end
 $var wire 1 # sr_valid_0 $end
 $var wire 6 $ io_in_a $end
 $var wire 6 % io_in_b $end
 $var wire 2 & normExp $end
 $var wire 1 ' io_valid_in $end
 $var wire 4 ( normFracA $end
 $var wire 4 ) normFracB $end
 $var wire 6 * sr_data_2 $end
 $var wire 6 + sr_data_1 $end
 $var wire 6 , sr_data_4 $end
 $var wire 6 - sr_data_3 $end
 $var wire 1 . sr_valid_6 $end
 $var wire 1 / sr_valid_5 $end
 $var wire 6 0 sr_data_0 $end
 $var wire 1 1 sr_valid_4 $end
 $var wire 1 2 sr_valid_3 $end
 $var wire 3 3 expDiff $end
 $var wire 1 4 reset $end
 $var wire 5 5 alignedLarge $end
 $var wire 6 6 result $end
 $var wire 1 7 carryOut $end
 $var wire 6 8 sr_data_6 $end
 $var wire 6 9 sr_data_5 $end
 $var wire 5 : alignedSmall $end
 $var wire 1 ; expAGtB $end
 $var wire 1 < io_valid_out $end
 $var wire 1 = signB $end
 $var wire 1 > signA $end
 $var wire 1 ? printf_7 $end
 $var wire 1 @ printf_6 $end
 $var wire 1 A clock $end
 $var wire 1 B printf_1 $end
 $var wire 1 C printf_5 $end
 $var wire 5 D fracSum $end
 $var wire 1 E printf_4 $end
 $var wire 1 F printf_3 $end
 $var wire 1 G printf_2 $end
 $var wire 6 H io_out $end
 $var wire 3 I fracA $end
 $var wire 3 J fracB $end
 $var wire 1 K printf $end
 $var wire 2 L expOut $end
 $var wire 3 M result_hi $end
 $var wire 2 N expB $end
 $var wire 2 O expA $end
 $var wire 3 P normFrac $end
$upscope $end
$enddefinitions $end
$dumpvars
01
02
04
07
0;
0<
0=
0>
0?
0@
0A
0B
0C
b00 &
0E
0F
0G
0K
b00000 5
b00000 :
b0000 (
b0000 )
b00000 D
b000000 H
b000000 6
b000 I
b000000 9
b000000 8
b000 P
b000000 0
b000 J
b000 M
b000 3
b000000 +
b000000 *
b000000 -
b000000 ,
b000000 %
b000000 $
b00 O
b00 N
0!
0"
0#
b00 L
0'
0.
0/
$end
#0
b100 P
14
b10000 D
b01000 5
b01 &
b001100 6
17
b1000 (
b1000 )
b01000 :
b001 M
#1
b001100 0
1A
#6
0A
04
1'
#11
1A
1#
b001100 +
#16
0A
b10001 D
b000001 %
b01001 5
b1001 )
b001 J
#21
1A
1"
b001100 *
#26
0A
b10010 D
b000010 %
b01010 5
b1010 )
b010 J
#31
1!
1A
b001100 -
#36
0A
b10011 D
b000011 %
b01011 5
b1011 )
b011 J
#41
1A
12
b001100 ,
#46
b101 P
0A
b10100 D
b000100 %
b01100 5
b001101 6
b1100 )
b100 J
#51
b001101 0
11
1A
b001100 9
#56
0A
b10101 D
b000101 %
b01101 5
b1101 )
b101 J
#61
1A
b001100 8
b001100 H
b001101 +
1/
#66
0A
b10110 D
b000110 %
b01110 5
b1110 )
b110 J
#71
1A
b001101 *
1<
1.
#76
0A
b10111 D
b000111 %
b01111 5
b1111 )
b111 J
#81
1A
b001101 -
#86
0A
b01100 D
b001000 %
b1000 )
b000 J
b01 L
b01 N
b110 P
b001 3
b01000 5
b001110 6
07
b00100 :
#91
b001110 0
1A
b001101 ,
#96
0A
b01101 D
b001001 %
b01001 5
b1001 )
b001 J
#101
1A
b001101 9
b001110 +
#106
b111 P
0A
b01110 D
b001010 %
b01010 5
b001111 6
b1010 )
b010 J
#111
b001111 0
1A
b001101 8
b001101 H
b001110 *
#116
0A
b01111 D
b001011 %
b01011 5
b1011 )
b011 J
#121
1A
b001111 +
b001110 -
#126
b100 P
0A
b10000 D
b001100 %
b01100 5
b10 &
b010100 6
17
b1100 )
b100 J
b010 M
#131
b010100 0
1A
b001111 *
b001110 ,
#136
0A
b10001 D
b001101 %
b01101 5
b1101 )
b101 J
#141
1A
b001110 9
b010100 +
b001111 -
#146
0A
b10010 D
b001110 %
b01110 5
b1110 )
b110 J
#151
1A
b001110 8
b001110 H
b010100 *
b001111 ,
#156
0A
b10011 D
b001111 %
b01111 5
b1111 )
b111 J
#161
1A
b001111 9
b010100 -
#166
0A
b01010 D
b010000 %
b1000 )
b000 J
b10 L
b10 N
b101 P
b010 3
b01000 5
b010101 6
07
b00010 :
#171
b010101 0
1A
b001111 8
b001111 H
b010100 ,
#176
0A
