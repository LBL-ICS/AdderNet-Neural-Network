$date
2025-07-29T19:35+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module FPAdder $end
 $var wire 4 ! io_in_a $end
 $var wire 4 " io_in_b $end
 $var wire 3 # normExp $end
 $var wire 1 $ io_valid_in $end
 $var wire 3 % manA $end
 $var wire 3 & manB $end
 $var wire 2 ' expDiff $end
 $var wire 2 ( normMan $end
 $var wire 1 ) reset $end
 $var wire 2 * commonExp $end
 $var wire 5 + sum $end
 $var wire 5 , result $end
 $var wire 1 - validOutReg $end
 $var wire 4 . inAReg $end
 $var wire 5 / outReg $end
 $var wire 5 0 shiftedSum $end
 $var wire 3 1 leadingOnePos $end
 $var wire 4 2 alignedManA $end
 $var wire 1 3 io_valid_out $end
 $var wire 4 4 alignedManB $end
 $var wire 1 5 clock $end
 $var wire 4 6 io_out $end
 $var wire 2 7 fracA $end
 $var wire 2 8 fracB $end
 $var wire 4 9 inBReg $end
 $var wire 1 : printf $end
 $var wire 2 ; expB $end
 $var wire 1 < validReg0 $end
 $var wire 2 = expA $end
$upscope $end
$enddefinitions $end
$dumpvars
b00 8
b00 7
03
b00 =
05
b00 ;
0:
0<
b00 (
b00 '
b00 *
b00000 +
b00000 ,
b00000 /
b00000 0
b000 &
b0000 "
b000 #
b0000 !
b000 %
b000 1
b0000 4
b0000 2
0$
b0000 .
0)
b0000 9
0-
b0000 6
$end
#0
1)
#1
15
#6
1$
05
0)
#11
15
1<
#16
b0001 "
05
#21
b100 1
13
b0001 4
15
b001 &
b01 8
b0001 9
b00001 +
1-
#26
b0010 !
b0011 "
05
#31
b0010 2
b0011 4
b010 %
15
b011 &
b10 7
b11 8
b0011 9
b00101 +
b0010 .
#36
b0100 !
b0101 "
05
#41
b100 %
b101 &
b01 *
b01001 +
b0100 .
b0100 2
b0101 4
15
b00 7
b01 8
b0101 9
b01 ;
b01 =
#46
b0110 !
b0111 "
05
#51
b0110 2
b0111 4
b110 %
15
b111 &
b10 7
b11 8
b0111 9
b01101 +
b0110 .
#56
b1000 !
b1001 "
05
#61
b100 %
b101 &
b10 *
b01001 +
b1000 .
b0100 2
b0101 4
15
b00 7
b01 8
b1001 9
b10 ;
b10 =
#66
b1010 !
b1011 "
05
#71
b0110 2
b0111 4
b110 %
15
b111 &
b10 7
b11 8
b1011 9
b01101 +
b1010 .
#76
b1100 !
b1101 "
05
#81
b100 %
b101 &
b11 *
b01001 +
b1100 .
b0100 2
b0101 4
15
b00 7
b01 8
b1101 9
b11 ;
b11 =
#86
b1110 !
b1111 "
05
#91
b0110 2
b0111 4
b110 %
15
b111 &
b10 7
b11 8
b1111 9
b01101 +
b1110 .
#96
b0000 !
05
#101
b0000 2
b0011 4
b000 %
15
b01 '
b00 7
b00 *
b00011 +
b00 =
b0000 .
#106
0$
05
#111
15
0<
#116
05
#121
03
15
0-
#126
05
#131
15
#136
05
