$date
2025-07-28T20:02+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module FPAdder $end
 $var wire 4 ! io_in_a $end
 $var wire 4 " io_in_b $end
 $var wire 1 # io_out_valid $end
 $var wire 3 $ manA $end
 $var wire 4 % pipe_data_0 $end
 $var wire 3 & manB $end
 $var wire 3 ' expDiff $end
 $var wire 2 ( manB_raw $end
 $var wire 1 ) reset $end
 $var wire 1 * io_in_valid $end
 $var wire 2 + resultFrac $end
 $var wire 2 , resultExp $end
 $var wire 32 - cycle $end
 $var wire 4 . resultMan $end
 $var wire 2 / manA_raw $end
 $var wire 2 0 expBig $end
 $var wire 3 1 alignedManA $end
 $var wire 3 2 alignedManB $end
 $var wire 3 3 maxExp $end
 $var wire 1 4 clock $end
 $var wire 1 5 printf_1 $end
 $var wire 1 6 printf_2 $end
 $var wire 3 7 shiftAmount $end
 $var wire 1 8 pipe_valids_0 $end
 $var wire 4 9 io_out $end
 $var wire 4 : normalized $end
 $var wire 1 ; printf $end
 $var wire 2 < expB $end
 $var wire 2 = expA $end
 $var wire 4 > finalResult $end
$upscope $end
$enddefinitions $end
$dumpvars
b00000000000000000000000000000000 -
04
b00 =
05
b00 <
b0000 >
06
08
b00 0
b00 /
0;
b000 7
b00 (
b000 3
b000 2
b00 ,
b00 +
b000 '
b0000 %
b000 &
b0000 "
b0000 !
b000 $
b000 1
0#
b0000 .
0)
b0000 :
0*
b0000 9
$end
#0
b011 3
1)
#1
14
#6
04
0)
1*
#11
1#
14
18
b00000000000000000000000000000001 -
#16
04
