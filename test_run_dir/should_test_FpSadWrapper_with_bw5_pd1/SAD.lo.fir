FIRRTL version 1.2.0
circuit SAD :
  module LZC : @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 223:7]
    input clock : Clock @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 223:7]
    input reset : UInt<1> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 223:7]
    input io_in : UInt<6> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 224:14]
    output io_out : UInt<3> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 224:14]

    node _io_out_T = bits(io_in, 3, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_1 = bits(_io_out_T, 1, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_2 = bits(_io_out_T_1, 0, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_3 = bits(_io_out_T_1, 1, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_4 = cat(_io_out_T_2, _io_out_T_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_5 = bits(_io_out_T, 3, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_6 = bits(_io_out_T_5, 0, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_7 = bits(_io_out_T_5, 1, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_8 = cat(_io_out_T_6, _io_out_T_7) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_9 = cat(_io_out_T_4, _io_out_T_8) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_10 = bits(io_in, 5, 4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_11 = bits(_io_out_T_10, 0, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_12 = bits(_io_out_T_10, 1, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_13 = cat(_io_out_T_11, _io_out_T_12) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_14 = cat(_io_out_T_9, _io_out_T_13) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_15 = bits(_io_out_T_14, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_16 = bits(_io_out_T_14, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_17 = bits(_io_out_T_14, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_18 = bits(_io_out_T_14, 3, 3) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_19 = bits(_io_out_T_14, 4, 4) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_20 = bits(_io_out_T_14, 5, 5) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_21 = mux(_io_out_T_19, UInt<3>("h4"), UInt<3>("h5")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_22 = mux(_io_out_T_18, UInt<2>("h3"), _io_out_T_21) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_23 = mux(_io_out_T_17, UInt<2>("h2"), _io_out_T_22) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_24 = mux(_io_out_T_16, UInt<1>("h1"), _io_out_T_23) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_25 = mux(_io_out_T_15, UInt<1>("h0"), _io_out_T_24) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    io_out <= _io_out_T_25 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:10]

  module FP4Subtractor : @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 324:7]
    input clock : Clock @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 324:7]
    input reset : UInt<1> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 324:7]
    input io_a : UInt<5> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 331:14]
    input io_b : UInt<5> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 331:14]
    output io_out : UInt<5> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 331:14]

    inst lzc of LZC @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 368:19]
    node expA = bits(io_a, 4, 3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 338:18]
    node manA = bits(io_a, 2, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 339:18]
    node expB = bits(io_b, 4, 3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 340:18]
    node manB = bits(io_b, 2, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 341:18]
    node manA_ext = cat(UInt<1>("h1"), manA) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 344:21]
    node manB_ext = cat(UInt<1>("h1"), manB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 345:21]
    node _expDiff_T = cvt(expA) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 348:23]
    node _expDiff_T_1 = cvt(expB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 348:35]
    node _expDiff_T_2 = sub(_expDiff_T, _expDiff_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 348:28]
    node _expDiff_T_3 = tail(_expDiff_T_2, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 348:28]
    node expDiff = asSInt(_expDiff_T_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 348:28]
    node _T = geq(expDiff, asSInt(UInt<1>("h0"))) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 354:16]
    node _alignedManA_T = shl(manA_ext, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 355:30]
    node _alignedManB_T = shl(manB_ext, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 356:30]
    node _alignedManB_T_1 = asUInt(expDiff) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 356:54]
    node _alignedManB_T_2 = dshr(_alignedManB_T, _alignedManB_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 356:43]
    node _alignedManA_T_1 = shl(manA_ext, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 358:30]
    node _alignedManA_T_2 = sub(asSInt(UInt<1>("h0")), expDiff) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 358:47]
    node _alignedManA_T_3 = tail(_alignedManA_T_2, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 358:47]
    node _alignedManA_T_4 = asSInt(_alignedManA_T_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 358:47]
    node _alignedManA_T_5 = asUInt(_alignedManA_T_4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 358:57]
    node _alignedManA_T_6 = dshr(_alignedManA_T_1, _alignedManA_T_5) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 358:43]
    node _alignedManB_T_3 = shl(manB_ext, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 359:30]
    node _GEN_0 = mux(_T, _alignedManA_T, _alignedManA_T_6) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 354:24 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 355:17 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 358:17]
    node _GEN_1 = mux(_T, _alignedManB_T_2, _alignedManB_T_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 354:24 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 356:17 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 359:17]
    node alignedManA = _GEN_0 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 351:25]
    node alignedManB = _GEN_1 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 352:25]
    node manAGTmanB = gt(alignedManA, alignedManB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 364:32]
    node _subMan_T = sub(alignedManA, alignedManB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 365:41]
    node _subMan_T_1 = tail(_subMan_T, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 365:41]
    node _subMan_T_2 = sub(alignedManB, alignedManA) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 365:68]
    node _subMan_T_3 = tail(_subMan_T_2, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 365:68]
    node _subMan_T_4 = mux(manAGTmanB, _subMan_T_1, _subMan_T_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 365:16]
    node subMan = _subMan_T_4 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 363:20 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 365:10]
    node normalizedMan = dshl(subMan, lzc.io_out) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 374:30]
    node _normExpRaw_T = asSInt(expA) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 377:41]
    node _normExpRaw_T_1 = asSInt(expB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 377:54]
    node _normExpRaw_T_2 = mux(manAGTmanB, _normExpRaw_T, _normExpRaw_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 377:23]
    node _normExpRaw_T_3 = asSInt(lzc.io_out) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 377:76]
    node _normExpRaw_T_4 = sub(_normExpRaw_T_2, _normExpRaw_T_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 377:62]
    node _normExpRaw_T_5 = tail(_normExpRaw_T_4, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 377:62]
    node normExpRaw = asSInt(_normExpRaw_T_5) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 377:62]
    node _outExp_T = lt(normExpRaw, asSInt(UInt<1>("h0"))) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 380:31]
    node _outExp_T_1 = asUInt(normExpRaw) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 380:54]
    node outExp = mux(_outExp_T, UInt<1>("h0"), _outExp_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 380:19]
    node finalMan = bits(normalizedMan, 4, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 383:31]
    node result = cat(outExp, finalMan) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 386:19]
    reg pipeRegs_0 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), pipeRegs_0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 389:25]
    node _pipeRegs_WIRE_0 = UInt<5>("h0") @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 389:33 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 389:33]
    io_out <= pipeRegs_0 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 394:10]
    lzc.clock <= clock
    lzc.reset <= reset
    lzc.io_in <= subMan @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 369:13]
    pipeRegs_0 <= bits(mux(reset, _pipeRegs_WIRE_0, result), 4, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 389:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 389:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 390:15]

  module LZC_4 : @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 223:7]
    input clock : Clock @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 223:7]
    input reset : UInt<1> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 223:7]
    input io_in : UInt<7> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 224:14]
    output io_out : UInt<3> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 224:14]

    node _io_out_T = bits(io_in, 3, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_1 = bits(_io_out_T, 1, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_2 = bits(_io_out_T_1, 0, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_3 = bits(_io_out_T_1, 1, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_4 = cat(_io_out_T_2, _io_out_T_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_5 = bits(_io_out_T, 3, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_6 = bits(_io_out_T_5, 0, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_7 = bits(_io_out_T_5, 1, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_8 = cat(_io_out_T_6, _io_out_T_7) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_9 = cat(_io_out_T_4, _io_out_T_8) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_10 = bits(io_in, 6, 4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_11 = bits(_io_out_T_10, 1, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_12 = bits(_io_out_T_11, 0, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_13 = bits(_io_out_T_11, 1, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_14 = cat(_io_out_T_12, _io_out_T_13) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_15 = bits(_io_out_T_10, 2, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_16 = cat(_io_out_T_14, _io_out_T_15) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_17 = cat(_io_out_T_9, _io_out_T_16) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_18 = bits(_io_out_T_17, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_19 = bits(_io_out_T_17, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_20 = bits(_io_out_T_17, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_21 = bits(_io_out_T_17, 3, 3) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_22 = bits(_io_out_T_17, 4, 4) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_23 = bits(_io_out_T_17, 5, 5) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_24 = bits(_io_out_T_17, 6, 6) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_25 = mux(_io_out_T_23, UInt<3>("h5"), UInt<3>("h6")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_26 = mux(_io_out_T_22, UInt<3>("h4"), _io_out_T_25) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_27 = mux(_io_out_T_21, UInt<2>("h3"), _io_out_T_26) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_28 = mux(_io_out_T_20, UInt<2>("h2"), _io_out_T_27) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_29 = mux(_io_out_T_19, UInt<1>("h1"), _io_out_T_28) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_30 = mux(_io_out_T_18, UInt<1>("h0"), _io_out_T_29) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    io_out <= _io_out_T_30 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:10]

  module FP4Adder : @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 242:7]
    input clock : Clock @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 242:7]
    input reset : UInt<1> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 242:7]
    input io_a : UInt<5> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 249:14]
    input io_b : UInt<5> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 249:14]
    output io_out : UInt<5> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 249:14]

    inst lzc of LZC_4 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 285:19]
    node expA = bits(io_a, 4, 3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 256:18]
    node manA = bits(io_a, 2, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 257:18]
    node expB = bits(io_b, 4, 3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 258:18]
    node manB = bits(io_b, 2, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 259:18]
    node manA_ext = cat(UInt<1>("h1"), manA) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 262:21]
    node manB_ext = cat(UInt<1>("h1"), manB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 263:21]
    node _expDiff_T = cvt(expA) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 266:23]
    node _expDiff_T_1 = cvt(expB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 266:35]
    node _expDiff_T_2 = sub(_expDiff_T, _expDiff_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 266:28]
    node _expDiff_T_3 = tail(_expDiff_T_2, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 266:28]
    node expDiff = asSInt(_expDiff_T_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 266:28]
    node _T = geq(expDiff, asSInt(UInt<1>("h0"))) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 272:16]
    node _alignedManA_T = shl(manA_ext, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 273:30]
    node _alignedManB_T = shl(manB_ext, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 274:30]
    node _alignedManB_T_1 = asUInt(expDiff) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 274:54]
    node _alignedManB_T_2 = dshr(_alignedManB_T, _alignedManB_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 274:43]
    node _alignedManA_T_1 = shl(manA_ext, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 276:30]
    node _alignedManA_T_2 = sub(asSInt(UInt<1>("h0")), expDiff) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 276:47]
    node _alignedManA_T_3 = tail(_alignedManA_T_2, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 276:47]
    node _alignedManA_T_4 = asSInt(_alignedManA_T_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 276:47]
    node _alignedManA_T_5 = asUInt(_alignedManA_T_4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 276:57]
    node _alignedManA_T_6 = dshr(_alignedManA_T_1, _alignedManA_T_5) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 276:43]
    node _alignedManB_T_3 = shl(manB_ext, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 277:30]
    node _GEN_0 = mux(_T, _alignedManA_T, _alignedManA_T_6) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 272:24 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 273:17 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 276:17]
    node _GEN_1 = mux(_T, _alignedManB_T_2, _alignedManB_T_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 272:24 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 274:17 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 277:17]
    node alignedManA = _GEN_0 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 269:25]
    node alignedManB = _GEN_1 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 270:25]
    node _sumRaw_T = add(alignedManA, alignedManB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 282:25]
    node sumRaw = _sumRaw_T @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 281:20 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 282:10]
    node _lzc_io_in_T = bits(sumRaw, 6, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 286:23]
    node _lzc_io_in_T_1 = not(_lzc_io_in_T) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 286:16]
    node _T_1 = bits(sumRaw, 6, 6) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 293:14]
    node _T_2 = eq(_T_1, UInt<1>("h1")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 293:29]
    node _normalizedSum_T = shr(sumRaw, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 295:29]
    node _normExp_T = geq(expDiff, asSInt(UInt<1>("h0"))) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 296:29]
    node _normExp_T_1 = mux(_normExp_T, expA, expB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 296:20]
    node _normExp_T_2 = asSInt(_normExp_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 296:49]
    node _normExp_T_3 = add(_normExp_T_2, asSInt(UInt<2>("h1"))) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 296:56]
    node _normExp_T_4 = tail(_normExp_T_3, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 296:56]
    node _normExp_T_5 = asSInt(_normExp_T_4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 296:56]
    node _normalizedSum_T_1 = dshl(sumRaw, lzc.io_out) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 299:29]
    node _normExp_T_6 = geq(expDiff, asSInt(UInt<1>("h0"))) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 300:29]
    node _normExp_T_7 = mux(_normExp_T_6, expA, expB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 300:20]
    node _normExp_T_8 = asSInt(_normExp_T_7) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 300:49]
    node _normExp_T_9 = asSInt(lzc.io_out) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 300:70]
    node _normExp_T_10 = sub(_normExp_T_8, _normExp_T_9) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 300:56]
    node _normExp_T_11 = tail(_normExp_T_10, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 300:56]
    node _normExp_T_12 = asSInt(_normExp_T_11) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 300:56]
    node _GEN_2 = mux(_T_2, _normalizedSum_T, _normalizedSum_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 293:38 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 295:19 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 299:19]
    node _GEN_3 = mux(_T_2, _normExp_T_5, _normExp_T_12) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 293:38 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 296:13 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 300:13]
    node normExp = _GEN_3 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 291:21]
    node _outExp_T = lt(normExp, asSInt(UInt<1>("h0"))) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 304:28]
    node _outExp_T_1 = asUInt(normExp) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 304:48]
    node outExp = mux(_outExp_T, UInt<1>("h0"), _outExp_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 304:19]
    node normalizedSum = bits(_GEN_2, 5, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 290:27]
    node finalMan = bits(normalizedSum, 5, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 307:31]
    node result = cat(outExp, finalMan) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 310:19]
    reg pipeRegs_0 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), pipeRegs_0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 313:25]
    node _pipeRegs_WIRE_0 = UInt<5>("h0") @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 313:33 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 313:33]
    io_out <= pipeRegs_0 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 318:10]
    lzc.clock <= clock
    lzc.reset <= reset
    lzc.io_in <= _lzc_io_in_T_1 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 286:13]
    pipeRegs_0 <= bits(mux(reset, _pipeRegs_WIRE_0, result), 4, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 313:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 313:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 314:15]

  module SAD : @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 398:7]
    input clock : Clock @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 398:7]
    input reset : UInt<1> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 398:7]
    input io_inA : UInt<20> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 399:14]
    input io_inB : UInt<20> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 399:14]
    output io_out : UInt<5> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 399:14]

    inst subtractors_0 of FP4Subtractor @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 415:39]
    inst subtractors_1 of FP4Subtractor @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 415:39]
    inst subtractors_2 of FP4Subtractor @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 415:39]
    inst subtractors_3 of FP4Subtractor @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 415:39]
    inst adder01 of FP4Adder @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 423:23]
    inst adder23 of FP4Adder @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 424:23]
    inst adderFinal of FP4Adder @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 431:26]
    node _aVec_0_T = bits(io_inA, 4, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 409:22]
    node _bVec_0_T = bits(io_inB, 4, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 410:22]
    node _aVec_1_T = bits(io_inA, 9, 5) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 409:22]
    node _bVec_1_T = bits(io_inB, 9, 5) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 410:22]
    node _aVec_2_T = bits(io_inA, 14, 10) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 409:22]
    node _bVec_2_T = bits(io_inB, 14, 10) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 410:22]
    node _aVec_3_T = bits(io_inA, 19, 15) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 409:22]
    node _bVec_3_T = bits(io_inB, 19, 15) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 410:22]
    reg io_out_r : UInt<5>, clock with :
      reset => (UInt<1>("h0"), io_out_r) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 436:26]
    node _GEN_0 = mux(UInt<1>("h1"), adderFinal.io_out, io_out_r) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 436:26 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 436:26 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 436:26]
    reg io_out_r_1 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), io_out_r_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 436:26]
    node _GEN_1 = mux(UInt<1>("h1"), io_out_r, io_out_r_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 436:26 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 436:26 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 436:26]
    reg io_out_r_2 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), io_out_r_2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 436:26]
    node _GEN_2 = mux(UInt<1>("h1"), io_out_r_1, io_out_r_2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 436:26 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 436:26 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 436:26]
    node aVec_0 = _aVec_0_T @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 406:18 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 409:13]
    node aVec_1 = _aVec_1_T @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 406:18 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 409:13]
    node aVec_2 = _aVec_2_T @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 406:18 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 409:13]
    node aVec_3 = _aVec_3_T @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 406:18 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 409:13]
    node bVec_0 = _bVec_0_T @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 407:18 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 410:13]
    node bVec_1 = _bVec_1_T @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 407:18 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 410:13]
    node bVec_2 = _bVec_2_T @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 407:18 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 410:13]
    node bVec_3 = _bVec_3_T @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 407:18 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 410:13]
    node subResults_0 = subtractors_0.io_out @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 414:24 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 419:19]
    node subResults_1 = subtractors_1.io_out @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 414:24 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 419:19]
    node subResults_2 = subtractors_2.io_out @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 414:24 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 419:19]
    node subResults_3 = subtractors_3.io_out @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 414:24 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 419:19]
    io_out <= io_out_r_2 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 436:10]
    subtractors_0.clock <= clock
    subtractors_0.reset <= reset
    subtractors_0.io_a <= aVec_0 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 417:25]
    subtractors_0.io_b <= bVec_0 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 418:25]
    subtractors_1.clock <= clock
    subtractors_1.reset <= reset
    subtractors_1.io_a <= aVec_1 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 417:25]
    subtractors_1.io_b <= bVec_1 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 418:25]
    subtractors_2.clock <= clock
    subtractors_2.reset <= reset
    subtractors_2.io_a <= aVec_2 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 417:25]
    subtractors_2.io_b <= bVec_2 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 418:25]
    subtractors_3.clock <= clock
    subtractors_3.reset <= reset
    subtractors_3.io_a <= aVec_3 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 417:25]
    subtractors_3.io_b <= bVec_3 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 418:25]
    adder01.clock <= clock
    adder01.reset <= reset
    adder01.io_a <= subResults_0 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 425:16]
    adder01.io_b <= subResults_1 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 426:16]
    adder23.clock <= clock
    adder23.reset <= reset
    adder23.io_a <= subResults_2 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 427:16]
    adder23.io_b <= subResults_3 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 428:16]
    adderFinal.clock <= clock
    adderFinal.reset <= reset
    adderFinal.io_a <= adder01.io_out @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 432:19]
    adderFinal.io_b <= adder23.io_out @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 433:19]
    io_out_r <= _GEN_0
    io_out_r_1 <= _GEN_1
    io_out_r_2 <= _GEN_2
