$date
2025-07-30T19:22+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module FPAdder $end
 $var wire 6 ! io_in_a $end
 $var wire 6 " io_in_b $end
 $var wire 2 # normExp $end
 $var wire 6 $ sr_data_2 $end
 $var wire 6 % sr_data_1 $end
 $var wire 6 & sr_data_4 $end
 $var wire 6 ' sr_data_3 $end
 $var wire 6 ( sr_data_0 $end
 $var wire 1 ) printf_17 $end
 $var wire 1 * printf_18 $end
 $var wire 1 + printf_19 $end
 $var wire 1 , printf_13 $end
 $var wire 1 - printf_14 $end
 $var wire 1 . printf_15 $end
 $var wire 1 / printf_16 $end
 $var wire 3 0 expDiff $end
 $var wire 1 1 printf_10 $end
 $var wire 1 2 printf_11 $end
 $var wire 1 3 printf_12 $end
 $var wire 5 4 alignedLarge $end
 $var wire 6 5 result $end
 $var wire 1 6 carryOut $end
 $var wire 6 7 sr_data_6 $end
 $var wire 6 8 sr_data_5 $end
 $var wire 5 9 alignedSmall $end
 $var wire 1 : io_valid_out $end
 $var wire 1 ; signB $end
 $var wire 1 < signA $end
 $var wire 1 = printf_9 $end
 $var wire 1 > printf_8 $end
 $var wire 1 ? printf_7 $end
 $var wire 1 @ printf_6 $end
 $var wire 1 A printf_1 $end
 $var wire 1 B printf_5 $end
 $var wire 5 C fracSum $end
 $var wire 1 D printf_4 $end
 $var wire 1 E printf_3 $end
 $var wire 1 F printf_2 $end
 $var wire 1 G printf $end
 $var wire 2 H expOut $end
 $var wire 3 I normFrac $end
 $var wire 1 J sr_valid_2 $end
 $var wire 1 K sr_valid_1 $end
 $var wire 1 L sr_valid_0 $end
 $var wire 1 M io_valid_in $end
 $var wire 4 N normFracA $end
 $var wire 4 O normFracB $end
 $var wire 1 P sr_valid_6 $end
 $var wire 1 Q sr_valid_5 $end
 $var wire 1 R sr_valid_4 $end
 $var wire 1 S sr_valid_3 $end
 $var wire 1 T reset $end
 $var wire 1 U expAGtB $end
 $var wire 1 V clock $end
 $var wire 6 W io_out $end
 $var wire 3 X fracA $end
 $var wire 3 Y fracB $end
 $var wire 3 Z result_hi $end
 $var wire 2 [ expB $end
 $var wire 2 \ expA $end
$upscope $end
$enddefinitions $end
$dumpvars
01
02
03
06
0:
0;
0<
0=
0>
0?
0@
0A
0B
0D
0E
0F
0G
0J
0K
0L
0M
b00 #
0P
b000000 W
0Q
0R
0S
b00000 4
0T
0U
0V
b00000 9
b00000 C
b000 Y
b000 X
b000 Z
b000000 7
b000 I
b000000 8
b000000 5
b000000 '
b000000 &
b000000 (
b0000 N
b0000 O
b000000 !
b000000 "
b000000 %
b000000 $
b00 \
b00 [
b000 0
b00 H
0)
0*
0+
0,
0-
0.
0/
$end
#0
b01 #
b10000 C
b01000 4
1T
b001100 5
16
b01000 9
b100 I
b001 Z
b1000 N
b1000 O
#1
1V
b001100 (
#6
b000001 !
b000010 "
b10011 C
1M
b1001 N
b1010 O
b01010 4
0T
0V
b001 X
b01001 9
b010 Y
#11
b001100 %
1V
1L
#16
0V
#21
b001100 $
1V
1K
#26
0V
#31
1V
b001100 '
1J
#36
0V
#41
1S
b001100 &
1V
#46
0V
#51
1R
1V
b001100 8
#56
0V
#61
1Q
1V
b001100 7
b001100 W
#66
0V
#71
1P
1V
1:
#76
0V
