$date
2025-08-05T20:54+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module FPSubtractorAbs_4_1 $end
 $var wire 1 ! io_valid_in $end
 $var wire 1 " io_valid_out $end
 $var wire 1 # lzc $end
 $var wire 1 $ manA $end
 $var wire 2 % maxExp $end
 $var wire 1 & manB $end
 $var wire 3 ' alignedB $end
 $var wire 3 ( alignedA $end
 $var wire 2 ) expDiff $end
 $var wire 3 * diff $end
 $var wire 4 + sr_array_0 $end
 $var wire 1 , clock $end
 $var wire 1 - normalizedMant $end
 $var wire 3 . aExt $end
 $var wire 4 / aVal $end
 $var wire 4 1 io_b $end
 $var wire 4 2 io_a $end
 $var wire 1 3 reset $end
 $var wire 4 4 io_out $end
 $var wire 3 5 result $end
 $var wire 2 6 bExt_hi $end
 $var wire 2 7 expA_ $end
 $var wire 6 8 normalizedMantFull $end
 $var wire 2 9 aExt_hi $end
 $var wire 3 : bExt $end
 $var wire 4 ; bVal $end
 $var wire 1 = valid_sr_0 $end
 $var wire 2 > adjustedExp $end
 $var wire 2 ? expB_ $end
  $scope module lzc $end
   $var wire 2 0 io_out $end
   $var wire 3 < io_in $end
  $upscope $end
$upscope $end
$enddefinitions $end
$dumpvars
b00 9
b00 7
03
b00 6
b000000 8
b00 0
0=
b00 )
b000 5
b00 %
b000 :
b000 <
b000 '
b000 (
b000 .
b0000 +
b000 *
b0000 4
0!
b0000 2
0"
0#
0$
b0000 1
0&
b0000 /
b00 ?
b0000 ;
b00 >
0,
0-
$end
#0
b10 0
13
b100 5
b10 6
b100 '
b100 (
b10 9
b100 :
b100 .
b10 >
#1
1,
#6
1!
03
0,
#11
1"
b0100 4
b0100 +
1,
1=
#16
1$
b110 (
b010 *
0,
b110 .
b0001 /
b01 0
b0001 1
b110 5
b000100 8
b11 9
b010 <
b11 >
#21
b0110 4
b0110 +
1,
#26
0$
b01 %
b010 '
b100 (
b01 )
0,
b100 .
b0010 /
b0010 1
b000 5
b01 7
b10 9
b00 >
#31
b0000 4
b0000 +
1,
#36
1$
b110 (
b100 *
0,
b110 .
b0011 /
b00 0
b0011 1
b010 5
b11 9
b100 <
b01 >
#41
b0010 4
b0010 +
1,
#46
0$
b10 %
b001 '
b100 (
b10 )
b011 *
0,
1-
b100 .
b0100 /
b01 0
b0100 1
b011 5
b10 7
b000110 8
b10 9
b011 <
#51
b0011 4
b0011 +
1,
#56
1$
b110 (
b101 *
0,
0-
b110 .
b0101 /
b00 0
b0101 1
b100 5
b000101 8
b11 9
b101 <
b10 >
#61
b0100 4
b0100 +
1,
#66
0$
b11 %
b000 '
b100 (
b11 )
b100 *
0,
b100 .
b0110 /
b0110 1
b110 5
b11 7
b000100 8
b10 9
b100 <
b11 >
#71
b0110 4
b0110 +
1,
#76
1$
b110 (
b110 *
0,
1-
b110 .
b0111 /
b0111 1
b111 5
b000110 8
b11 9
b110 <
#81
b0111 4
b0111 +
1,
#86
0$
b00 %
b100 '
b100 (
b00 )
b000 *
0,
0-
b100 .
b1000 /
b10 0
b1000 1
b100 5
b00 7
b000000 8
b10 9
b000 <
b10 >
#91
b0100 4
b0100 +
1,
#96
1$
b110 (
b010 *
0,
b110 .
b1001 /
b01 0
b1001 1
b110 5
b000100 8
b11 9
b010 <
b11 >
#101
b0110 4
b0110 +
1,
#106
0!
0$
b100 (
b000 *
0,
b100 .
b0000 /
b10 0
b0000 1
b100 5
b000000 8
b10 9
b000 <
b10 >
#111
0"
b0100 4
b0100 +
1,
0=
#116
0,
