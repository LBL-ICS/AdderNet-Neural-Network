$date
2025-07-24T18:28+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module SAD $end
 $var wire 1 # io_valid_in $end
 $var wire 5 ( absDiffs_2 $end
 $var wire 5 ) absDiffs_1 $end
 $var wire 5 * absDiffs_0 $end
 $var wire 1 / reset $end
 $var wire 5 0 absDiffs_3 $end
 $var wire 4 1 io_a_3 $end
 $var wire 4 2 io_a_0 $end
 $var wire 4 4 io_a_2 $end
 $var wire 4 5 io_a_1 $end
 $var wire 1 9 adderTree $end
 $var wire 1 ; validRegs_4 $end
 $var wire 1 < validRegs_5 $end
 $var wire 1 = validRegs_6 $end
 $var wire 1 A validRegs_0 $end
 $var wire 1 B validRegs_1 $end
 $var wire 1 C validRegs_2 $end
 $var wire 1 D validRegs_3 $end
 $var wire 4 G io_b_3 $end
 $var wire 4 H io_b_2 $end
 $var wire 4 I io_b_1 $end
 $var wire 4 J io_b_0 $end
 $var wire 1 K io_valid_out $end
 $var wire 1 N clock $end
 $var wire 13 S io_sum $end
 $var wire 1 V absvals_2 $end
 $var wire 1 W absvals_1 $end
 $var wire 1 X absvals_0 $end
 $var wire 1 Y subtractors_3 $end
 $var wire 1 Z absvals_3 $end
 $var wire 1 \ subtractors_0 $end
 $var wire 1 ] subtractors_1 $end
 $var wire 1 ^ subtractors_2 $end
  $scope module absvals_2 $end
   $var wire 5 O io_out $end
   $var wire 5 [ io_in $end
  $upscope $end
  $scope module absvals_1 $end
   $var wire 5 > io_out $end
   $var wire 5 R io_in $end
  $upscope $end
  $scope module subtractors_0 $end
   $var wire 5 , io_diff $end
   $var wire 4 E io_b $end
   $var wire 4 F io_a $end
  $upscope $end
  $scope module absvals_0 $end
   $var wire 5 ' io_in $end
   $var wire 5 P io_out $end
  $upscope $end
  $scope module subtractors_1 $end
   $var wire 4 ! io_b $end
   $var wire 4 " io_a $end
   $var wire 5 : io_diff $end
  $upscope $end
  $scope module adderTree $end
   $var wire 1 - clock $end
   $var wire 7 . io_out_pairs_0_1 $end
   $var wire 5 3 io_in_3 $end
   $var wire 5 6 io_in_0 $end
   $var wire 5 7 io_in_1 $end
   $var wire 5 8 io_in_2 $end
   $var wire 6 L io_out_pairs_0 $end
   $var wire 6 M io_out_pairs_1 $end
   $var wire 7 Q io_out $end
  $upscope $end
  $scope module subtractors_2 $end
   $var wire 4 $ io_b $end
   $var wire 4 % io_a $end
   $var wire 5 T io_diff $end
  $upscope $end
  $scope module subtractors_3 $end
   $var wire 5 + io_diff $end
   $var wire 4 ? io_a $end
   $var wire 4 @ io_b $end
  $upscope $end
  $scope module absvals_3 $end
   $var wire 5 & io_in $end
   $var wire 5 U io_out $end
  $upscope $end
$upscope $end
$enddefinitions $end
$dumpvars
09
0;
0<
0=
0A
0B
0C
0D
b00000 '
b00000 &
b00000 )
b00000 (
b00000 +
b00000 *
0K
b00000 ,
0N
b00000 0
b0000 $
b00000 3
b0000 %
b0000 "
b00000 7
b0000 !
b00000 6
0V
0W
b00000 8
0X
0Y
b00000 :
0Z
0\
0]
b00000 >
0^
b0000 4
b0000 5
b0000 2
b0000000000000 S
b0000 1
b000000 M
b000000 L
b00000 O
b00000 P
b0000 E
b00000 R
b00000 U
b00000 T
b0000 @
b0000000 Q
b0000 ?
b00000 [
b0000 J
b0000 H
b0000 I
b0000 F
b0000 G
b0000000 .
0#
0-
0/
$end
#0
1/
#1
1-
1N
#6
0N
0/
