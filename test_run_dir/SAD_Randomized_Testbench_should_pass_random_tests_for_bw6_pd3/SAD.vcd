$date
2025-07-24T18:28+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module SAD $end
 $var wire 1 # io_valid_in $end
 $var wire 7 ( absDiffs_2 $end
 $var wire 7 ) absDiffs_1 $end
 $var wire 7 * absDiffs_0 $end
 $var wire 1 / reset $end
 $var wire 7 0 absDiffs_3 $end
 $var wire 6 1 io_a_3 $end
 $var wire 6 2 io_a_0 $end
 $var wire 6 4 io_a_2 $end
 $var wire 6 5 io_a_1 $end
 $var wire 1 9 adderTree $end
 $var wire 1 > validRegs_0 $end
 $var wire 1 ? validRegs_1 $end
 $var wire 1 @ validRegs_2 $end
 $var wire 6 C io_b_3 $end
 $var wire 6 D io_b_2 $end
 $var wire 6 E io_b_1 $end
 $var wire 6 F io_b_0 $end
 $var wire 1 G io_valid_out $end
 $var wire 1 J clock $end
 $var wire 11 O io_sum $end
 $var wire 1 R absvals_2 $end
 $var wire 1 S absvals_1 $end
 $var wire 1 T absvals_0 $end
 $var wire 1 U subtractors_3 $end
 $var wire 1 V absvals_3 $end
 $var wire 1 X subtractors_0 $end
 $var wire 1 Y subtractors_1 $end
 $var wire 1 Z subtractors_2 $end
  $scope module absvals_2 $end
   $var wire 7 K io_out $end
   $var wire 7 W io_in $end
  $upscope $end
  $scope module absvals_1 $end
   $var wire 7 ; io_out $end
   $var wire 7 N io_in $end
  $upscope $end
  $scope module subtractors_0 $end
   $var wire 7 , io_diff $end
   $var wire 6 A io_b $end
   $var wire 6 B io_a $end
  $upscope $end
  $scope module absvals_0 $end
   $var wire 7 ' io_in $end
   $var wire 7 L io_out $end
  $upscope $end
  $scope module subtractors_1 $end
   $var wire 6 ! io_b $end
   $var wire 6 " io_a $end
   $var wire 7 : io_diff $end
  $upscope $end
  $scope module adderTree $end
   $var wire 1 - clock $end
   $var wire 9 . io_out_pairs_0_1 $end
   $var wire 7 3 io_in_3 $end
   $var wire 7 6 io_in_0 $end
   $var wire 7 7 io_in_1 $end
   $var wire 7 8 io_in_2 $end
   $var wire 8 H io_out_pairs_0 $end
   $var wire 8 I io_out_pairs_1 $end
   $var wire 9 M io_out $end
  $upscope $end
  $scope module subtractors_2 $end
   $var wire 6 $ io_b $end
   $var wire 6 % io_a $end
   $var wire 7 P io_diff $end
  $upscope $end
  $scope module subtractors_3 $end
   $var wire 7 + io_diff $end
   $var wire 6 < io_a $end
   $var wire 6 = io_b $end
  $upscope $end
  $scope module absvals_3 $end
   $var wire 7 & io_in $end
   $var wire 7 Q io_out $end
  $upscope $end
$upscope $end
$enddefinitions $end
$dumpvars
09
0>
0?
0@
0G
0J
b000000000 .
0R
0S
0T
0U
0V
b00000000 I
b00000000 H
0X
0Y
0Z
b000000 F
b000000000 M
b000000 A
b0000000 W
b000000 C
b000000 B
b000000 E
b000000 D
b0000000 K
b0000000 L
b0000000 N
b0000000 Q
b000000 =
b0000000 P
b000000 <
b000000 1
b000000 2
b000000 5
b000000 4
b0000000 ;
b0000000 :
b0000000 3
b000000 !
b0000000 7
b0000000 6
b000000 "
b000000 %
b0000000 8
b000000 $
b0000000 +
b0000000 *
b0000000 ,
b0000000 0
b0000000 '
b0000000 &
b0000000 )
b0000000 (
0#
b00000000000 O
0-
0/
$end
#0
1/
#1
1J
1-
#6
0J
0/
