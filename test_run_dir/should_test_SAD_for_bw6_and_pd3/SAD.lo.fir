FIRRTL version 1.2.0
circuit SAD :
  module LZC : @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 223:7]
    input clock : Clock @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 223:7]
    input reset : UInt<1> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 223:7]
    input io_in : UInt<7> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 224:14]
    output io_out : UInt<3> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 224:14]

    node _io_out_T = bits(io_in, 3, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_1 = bits(_io_out_T, 1, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_2 = bits(_io_out_T_1, 0, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_3 = bits(_io_out_T_1, 1, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_4 = cat(_io_out_T_2, _io_out_T_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_5 = bits(_io_out_T, 3, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_6 = bits(_io_out_T_5, 0, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_7 = bits(_io_out_T_5, 1, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_8 = cat(_io_out_T_6, _io_out_T_7) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_9 = cat(_io_out_T_4, _io_out_T_8) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_10 = bits(io_in, 6, 4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_11 = bits(_io_out_T_10, 1, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_12 = bits(_io_out_T_11, 0, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_13 = bits(_io_out_T_11, 1, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_14 = cat(_io_out_T_12, _io_out_T_13) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_15 = bits(_io_out_T_10, 2, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_16 = cat(_io_out_T_14, _io_out_T_15) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_17 = cat(_io_out_T_9, _io_out_T_16) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_18 = bits(_io_out_T_17, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_19 = bits(_io_out_T_17, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_20 = bits(_io_out_T_17, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_21 = bits(_io_out_T_17, 3, 3) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_22 = bits(_io_out_T_17, 4, 4) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_23 = bits(_io_out_T_17, 5, 5) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_24 = bits(_io_out_T_17, 6, 6) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_25 = mux(_io_out_T_23, UInt<3>("h5"), UInt<3>("h6")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_26 = mux(_io_out_T_22, UInt<3>("h4"), _io_out_T_25) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_27 = mux(_io_out_T_21, UInt<2>("h3"), _io_out_T_26) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_28 = mux(_io_out_T_20, UInt<2>("h2"), _io_out_T_27) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_29 = mux(_io_out_T_19, UInt<1>("h1"), _io_out_T_28) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_30 = mux(_io_out_T_18, UInt<1>("h0"), _io_out_T_29) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    io_out <= _io_out_T_30 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:10]

  module FP4Subtractor : @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 242:7]
    input clock : Clock @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 242:7]
    input reset : UInt<1> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 242:7]
    input io_a : UInt<6> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 246:14]
    input io_b : UInt<6> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 246:14]
    output io_out : UInt<6> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 246:14]

    inst lzc of LZC @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 286:19]
    node expA = bits(io_a, 5, 4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 256:18]
    node expB = bits(io_b, 5, 4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 257:18]
    node manA = bits(io_a, 3, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 258:18]
    node manB = bits(io_b, 3, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 259:18]
    node manA_ext = cat(UInt<1>("h1"), manA) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 262:21]
    node manB_ext = cat(UInt<1>("h1"), manB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 263:21]
    node _expDiff_T = asSInt(expA) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 267:19]
    node _expDiff_T_1 = asSInt(expB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 267:33]
    node _expDiff_T_2 = sub(_expDiff_T, _expDiff_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 267:26]
    node _expDiff_T_3 = tail(_expDiff_T_2, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 267:26]
    node _expDiff_T_4 = asSInt(_expDiff_T_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 267:26]
    node expDiff = pad(_expDiff_T_4, 3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 266:21 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 267:11]
    node _T = geq(expDiff, asSInt(UInt<1>("h0"))) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 273:16]
    node _alignedManA_T = shl(manA_ext, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 274:29]
    node _alignedManB_T = shl(manB_ext, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 275:30]
    node _alignedManB_T_1 = asUInt(expDiff) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 275:47]
    node _alignedManB_T_2 = dshr(_alignedManB_T, _alignedManB_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 275:36]
    node _alignedManA_T_1 = shl(manA_ext, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 277:30]
    node _alignedManA_T_2 = sub(asSInt(UInt<1>("h0")), expDiff) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 277:40]
    node _alignedManA_T_3 = tail(_alignedManA_T_2, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 277:40]
    node _alignedManA_T_4 = asSInt(_alignedManA_T_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 277:40]
    node _alignedManA_T_5 = asUInt(_alignedManA_T_4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 277:50]
    node _alignedManA_T_6 = dshr(_alignedManA_T_1, _alignedManA_T_5) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 277:36]
    node _alignedManB_T_3 = shl(manB_ext, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 278:29]
    node _GEN_0 = mux(_T, _alignedManA_T, _alignedManA_T_6) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 273:24 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 274:17 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 277:17]
    node _GEN_1 = mux(_T, _alignedManB_T_2, _alignedManB_T_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 273:24 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 275:17 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 278:17]
    node alignedManA = _GEN_0 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 270:25]
    node alignedManB = _GEN_1 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 271:25]
    node _subMan_T = gt(alignedManA, alignedManB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 283:29]
    node _subMan_T_1 = sub(alignedManA, alignedManB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 283:56]
    node _subMan_T_2 = tail(_subMan_T_1, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 283:56]
    node _subMan_T_3 = sub(alignedManB, alignedManA) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 283:83]
    node _subMan_T_4 = tail(_subMan_T_3, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 283:83]
    node _subMan_T_5 = mux(_subMan_T, _subMan_T_2, _subMan_T_4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 283:16]
    node subMan = _subMan_T_5 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 282:20 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 283:10]
    node normalizedMan = dshl(subMan, lzc.io_out) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 291:30]
    node _outExp_T = geq(expDiff, asSInt(UInt<1>("h0"))) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 296:13]
    node _outExp_T_1 = sub(expA, lzc.io_out) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 297:18]
    node _outExp_T_2 = tail(_outExp_T_1, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 297:18]
    node _outExp_T_3 = sub(expB, lzc.io_out) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:18]
    node _outExp_T_4 = tail(_outExp_T_3, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 298:18]
    node _outExp_T_5 = mux(_outExp_T, _outExp_T_2, _outExp_T_4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 295:16]
    node _io_out_T = bits(normalizedMan, 5, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 305:18]
    node outExp = bits(_outExp_T_5, 1, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 294:20 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 295:10]
    node io_out_hi = cat(UInt<1>("h0"), outExp) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 302:16]
    node _io_out_T_1 = cat(io_out_hi, _io_out_T) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 302:16]
    io_out <= bits(_io_out_T_1, 5, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 302:10]
    lzc.clock <= clock
    lzc.reset <= reset
    lzc.io_in <= subMan @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 287:13]

  module LZC_4 : @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 223:7]
    input clock : Clock @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 223:7]
    input reset : UInt<1> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 223:7]
    input io_in : UInt<8> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 224:14]
    output io_out : UInt<4> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 224:14]

    node _io_out_T = shl(UInt<4>("hf"), 4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_1 = xor(UInt<8>("hff"), _io_out_T) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_2 = shr(io_in, 4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_3 = and(_io_out_T_2, _io_out_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_4 = bits(io_in, 3, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_5 = shl(_io_out_T_4, 4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_6 = not(_io_out_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_7 = and(_io_out_T_5, _io_out_T_6) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_8 = or(_io_out_T_3, _io_out_T_7) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_9 = bits(_io_out_T_1, 5, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_10 = shl(_io_out_T_9, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_11 = xor(_io_out_T_1, _io_out_T_10) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_12 = shr(_io_out_T_8, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_13 = and(_io_out_T_12, _io_out_T_11) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_14 = bits(_io_out_T_8, 5, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_15 = shl(_io_out_T_14, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_16 = not(_io_out_T_11) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_17 = and(_io_out_T_15, _io_out_T_16) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_18 = or(_io_out_T_13, _io_out_T_17) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_19 = bits(_io_out_T_11, 6, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_20 = shl(_io_out_T_19, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_21 = xor(_io_out_T_11, _io_out_T_20) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_22 = shr(_io_out_T_18, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_23 = and(_io_out_T_22, _io_out_T_21) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_24 = bits(_io_out_T_18, 6, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_25 = shl(_io_out_T_24, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_26 = not(_io_out_T_21) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_27 = and(_io_out_T_25, _io_out_T_26) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_28 = or(_io_out_T_23, _io_out_T_27) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:36]
    node _io_out_T_29 = bits(_io_out_T_28, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_30 = bits(_io_out_T_28, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_31 = bits(_io_out_T_28, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_32 = bits(_io_out_T_28, 3, 3) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_33 = bits(_io_out_T_28, 4, 4) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_34 = bits(_io_out_T_28, 5, 5) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_35 = bits(_io_out_T_28, 6, 6) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_36 = bits(_io_out_T_28, 7, 7) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _io_out_T_37 = mux(_io_out_T_35, UInt<3>("h6"), UInt<3>("h7")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_38 = mux(_io_out_T_34, UInt<3>("h5"), _io_out_T_37) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_39 = mux(_io_out_T_33, UInt<3>("h4"), _io_out_T_38) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_40 = mux(_io_out_T_32, UInt<2>("h3"), _io_out_T_39) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_41 = mux(_io_out_T_31, UInt<2>("h2"), _io_out_T_40) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_42 = mux(_io_out_T_30, UInt<1>("h1"), _io_out_T_41) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _io_out_T_43 = mux(_io_out_T_29, UInt<1>("h0"), _io_out_T_42) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    io_out <= pad(_io_out_T_43, 4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 228:10]

  module FP4Adder : @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 309:7]
    input clock : Clock @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 309:7]
    input reset : UInt<1> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 309:7]
    input io_a : UInt<6> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 316:14]
    input io_b : UInt<6> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 316:14]
    output io_out : UInt<6> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 316:14]

    inst lzc of LZC_4 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 353:19]
    node expA = bits(io_a, 5, 4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 323:18]
    node manA = bits(io_a, 3, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 324:18]
    node expB = bits(io_b, 5, 4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 325:18]
    node manB = bits(io_b, 3, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 326:18]
    node manA_ext = cat(UInt<1>("h1"), manA) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 329:21]
    node manB_ext = cat(UInt<1>("h1"), manB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 330:21]
    node _expDiff_T = cvt(expA) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 334:19]
    node _expDiff_T_1 = cvt(expB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 334:31]
    node _expDiff_T_2 = sub(_expDiff_T, _expDiff_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 334:24]
    node _expDiff_T_3 = tail(_expDiff_T_2, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 334:24]
    node _expDiff_T_4 = asSInt(_expDiff_T_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 334:24]
    node expDiff = _expDiff_T_4 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 333:21 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 334:11]
    node _T = geq(expDiff, asSInt(UInt<1>("h0"))) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 340:16]
    node _alignedManA_T = shl(manA_ext, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 341:30]
    node _alignedManB_T = shl(manB_ext, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 342:30]
    node _alignedManB_T_1 = asUInt(expDiff) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 342:54]
    node _alignedManB_T_2 = dshr(_alignedManB_T, _alignedManB_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 342:43]
    node _alignedManA_T_1 = shl(manA_ext, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 344:30]
    node _alignedManA_T_2 = sub(asSInt(UInt<1>("h0")), expDiff) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 344:47]
    node _alignedManA_T_3 = tail(_alignedManA_T_2, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 344:47]
    node _alignedManA_T_4 = asSInt(_alignedManA_T_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 344:47]
    node _alignedManA_T_5 = asUInt(_alignedManA_T_4) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 344:57]
    node _alignedManA_T_6 = dshr(_alignedManA_T_1, _alignedManA_T_5) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 344:43]
    node _alignedManB_T_3 = shl(manB_ext, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 345:30]
    node _GEN_0 = mux(_T, _alignedManA_T, _alignedManA_T_6) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 340:24 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 341:17 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 344:17]
    node _GEN_1 = mux(_T, _alignedManB_T_2, _alignedManB_T_3) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 340:24 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 342:17 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 345:17]
    node alignedManA = _GEN_0 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 337:25]
    node alignedManB = _GEN_1 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 338:25]
    node _sumRaw_T = add(alignedManA, alignedManB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 350:25]
    node sumRaw = _sumRaw_T @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 349:20 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 350:10]
    node _lzc_io_in_T = bits(sumRaw, 7, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 354:23]
    node _lzc_io_in_T_1 = not(_lzc_io_in_T) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 354:16]
    node _T_1 = bits(sumRaw, 7, 7) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 361:14]
    node _T_2 = eq(_T_1, UInt<1>("h1")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 361:29]
    node _normalizedSum_T = shr(sumRaw, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 363:29]
    node _normExp_T = geq(expDiff, asSInt(UInt<1>("h0"))) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 364:29]
    node _normExp_T_1 = mux(_normExp_T, expA, expB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 364:20]
    node _normExp_T_2 = add(_normExp_T_1, UInt<1>("h1")) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 364:49]
    node _normExp_T_3 = tail(_normExp_T_2, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 364:49]
    node _normalizedSum_T_1 = dshl(sumRaw, lzc.io_out) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 367:29]
    node _normExp_T_4 = geq(expDiff, asSInt(UInt<1>("h0"))) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 368:29]
    node _normExp_T_5 = mux(_normExp_T_4, expA, expB) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 368:20]
    node _normExp_T_6 = sub(_normExp_T_5, lzc.io_out) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 368:49]
    node _normExp_T_7 = tail(_normExp_T_6, 1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 368:49]
    node _GEN_2 = mux(_T_2, _normalizedSum_T, _normalizedSum_T_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 361:38 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 363:19 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 367:19]
    node _GEN_3 = mux(_T_2, _normExp_T_3, _normExp_T_7) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 361:38 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 364:13 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 368:13]
    node normalizedSum = bits(_GEN_2, 6, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 358:27]
    node finalMan = bits(normalizedSum, 6, 2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 372:31]
    node normExp = bits(_GEN_3, 1, 0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 359:21]
    node _outExp_T = asSInt(normExp) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 375:28]
    node _outExp_T_1 = lt(_outExp_T, asSInt(UInt<1>("h0"))) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 375:35]
    node outExp = mux(_outExp_T_1, UInt<1>("h0"), normExp) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 375:19]
    node _io_out_T = cat(outExp, finalMan) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 378:16]
    reg pipeRegs_0 : UInt<6>, clock with :
      reset => (UInt<1>("h0"), pipeRegs_0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 381:25]
    reg pipeRegs_1 : UInt<6>, clock with :
      reset => (UInt<1>("h0"), pipeRegs_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 381:25]
    reg pipeRegs_2 : UInt<6>, clock with :
      reset => (UInt<1>("h0"), pipeRegs_2) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 381:25]
    node _pipeRegs_WIRE_0 = UInt<6>("h0") @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 381:33 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 381:33]
    node _pipeRegs_WIRE_1 = UInt<6>("h0") @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 381:33 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 381:33]
    node _pipeRegs_WIRE_2 = UInt<6>("h0") @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 381:33 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 381:33]
    io_out <= pipeRegs_2 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 386:10]
    lzc.clock <= clock
    lzc.reset <= reset
    lzc.io_in <= _lzc_io_in_T_1 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 354:13]
    pipeRegs_0 <= mux(reset, _pipeRegs_WIRE_0, io_out) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 381:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 381:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 382:15]
    pipeRegs_1 <= mux(reset, _pipeRegs_WIRE_1, pipeRegs_0) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 381:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 381:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 384:17]
    pipeRegs_2 <= mux(reset, _pipeRegs_WIRE_2, pipeRegs_1) @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 381:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 381:25 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 384:17]

  module SAD : @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 391:7]
    input clock : Clock @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 391:7]
    input reset : UInt<1> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 391:7]
    input io_inA_0 : UInt<6> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 396:14]
    input io_inA_1 : UInt<6> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 396:14]
    input io_inA_2 : UInt<6> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 396:14]
    input io_inA_3 : UInt<6> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 396:14]
    input io_inB_0 : UInt<6> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 396:14]
    input io_inB_1 : UInt<6> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 396:14]
    input io_inB_2 : UInt<6> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 396:14]
    input io_inB_3 : UInt<6> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 396:14]
    output io_out : UInt<6> @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 396:14]

    inst sub of FP4Subtractor @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 404:21]
    inst sub_1 of FP4Subtractor @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 404:21]
    inst sub_2 of FP4Subtractor @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 404:21]
    inst sub_3 of FP4Subtractor @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 404:21]
    inst sum1 of FP4Adder @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 410:20]
    inst sum2 of FP4Adder @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 414:20]
    inst sum3 of FP4Adder @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 418:20]
    node diffs_0 = sub.io_out @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 402:19 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 407:14]
    node diffs_1 = sub_1.io_out @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 402:19 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 407:14]
    node diffs_2 = sub_2.io_out @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 402:19 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 407:14]
    node diffs_3 = sub_3.io_out @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 402:19 \\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 407:14]
    io_out <= sum3.io_out @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 422:10]
    sub.clock <= clock
    sub.reset <= reset
    sub.io_a <= io_inA_0 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 405:14]
    sub.io_b <= io_inB_0 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 406:14]
    sub_1.clock <= clock
    sub_1.reset <= reset
    sub_1.io_a <= io_inA_1 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 405:14]
    sub_1.io_b <= io_inB_1 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 406:14]
    sub_2.clock <= clock
    sub_2.reset <= reset
    sub_2.io_a <= io_inA_2 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 405:14]
    sub_2.io_b <= io_inB_2 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 406:14]
    sub_3.clock <= clock
    sub_3.reset <= reset
    sub_3.io_a <= io_inA_3 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 405:14]
    sub_3.io_b <= io_inB_3 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 406:14]
    sum1.clock <= clock
    sum1.reset <= reset
    sum1.io_a <= diffs_0 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 411:13]
    sum1.io_b <= diffs_1 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 412:13]
    sum2.clock <= clock
    sum2.reset <= reset
    sum2.io_a <= diffs_2 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 415:13]
    sum2.io_b <= diffs_3 @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 416:13]
    sum3.clock <= clock
    sum3.reset <= reset
    sum3.io_a <= sum1.io_out @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 419:13]
    sum3.io_b <= sum2.io_out @[\\REU Project Working\\Chisel-for-Fundamental-IC\\src\\main\\scala\\Fundamental_IC.scala 420:13]
