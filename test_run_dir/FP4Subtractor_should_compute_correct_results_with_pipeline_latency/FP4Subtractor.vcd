$date
2025-07-25T01:18+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module FP4Subtractor $end
 $var wire 5 ! alignedManA $end
 $var wire 1 " lzc $end
 $var wire 2 # manA $end
 $var wire 5 $ alignedManB $end
 $var wire 1 % manAGTmanB $end
 $var wire 4 & pipeRegs_2 $end
 $var wire 2 ' manB $end
 $var wire 3 ( manA_ext $end
 $var wire 5 ) subMan $end
 $var wire 4 * pipeRegs_1 $end
 $var wire 4 + pipeRegs_0 $end
 $var wire 3 , expDiff $end
 $var wire 3 - manB_ext $end
 $var wire 1 . clock $end
 $var wire 3 0 normExpRaw $end
 $var wire 4 1 io_b $end
 $var wire 4 2 io_a $end
 $var wire 1 3 reset $end
 $var wire 4 4 io_out $end
 $var wire 5 5 result $end
 $var wire 12 6 normalizedMan $end
 $var wire 2 7 finalMan $end
 $var wire 2 8 expB $end
 $var wire 2 9 expA $end
 $var wire 3 ; outExp $end
  $scope module lzc $end
   $var wire 3 / io_out $end
   $var wire 5 : io_in $end
  $upscope $end
$upscope $end
$enddefinitions $end
$dumpvars
b00 9
b00 8
b00 7
03
b00000 !
b000000000000 6
b00 '
b00000 $
b00000 )
b000 ;
b00 #
b00000 5
b000 (
b000 /
b00000 :
b0000 *
b0000 +
b000 0
b0000 &
b000 -
b000 ,
b0000 4
b0000 2
0"
b0000 1
0%
0.
$end
#0
b100 0
b10000 !
13
b10000 $
b100 (
b100 -
b100 /
#1
1.
#6
13
0.
#11
1.
#16
b01110 $
1%
b11 '
b00010 )
b001 ,
b111 -
0.
b011 /
b1011 1
b1100 2
03
b000000010000 6
b10 8
b11 9
b00010 :
#21
1.
#26
b10100 !
b01 #
b00110 $
b10 '
b101 (
b01110 )
b010 ,
b110 -
0.
b001 /
b101 0
b0010 1
b1001 2
b00011 5
b000000011100 6
b11 7
b00 8
b10 9
b01110 :
#31
b0011 +
1.
#36
b11000 !
b10 #
b00010 $
b01 '
b110 (
b10110 )
b011 ,
b101 -
0.
b000 /
b111 0
b0001 1
b1110 2
b00001 5
b000000010110 6
b01 7
b11 9
b10110 :
#41
b0011 *
b0001 +
1.
#46
b10000 !
b00 #
b11000 $
0%
b10 '
b100 (
b01000 )
b000 ,
b110 -
0.
b001 /
b101 0
b1010 1
b1000 2
b00000 5
b000000010000 6
b00 7
b10 8
b10 9
b01000 :
#51
b0011 4
b0011 &
b0001 *
b0000 +
1.
#56
0.
