$date
2025-07-28T22:00+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module FPAdder $end
 $var wire 1 ! sr_valid_2 $end
 $var wire 1 " sr_valid_1 $end
 $var wire 3 # baseA $end
 $var wire 1 $ sr_valid_0 $end
 $var wire 5 % sr_b_0 $end
 $var wire 3 & baseB $end
 $var wire 5 ' sr_b_1 $end
 $var wire 5 ( io_in_a $end
 $var wire 5 ) sr_b_2 $end
 $var wire 5 * io_in_b $end
 $var wire 5 + sr_b_3 $end
 $var wire 5 , sr_b_4 $end
 $var wire 5 - sr_b_5 $end
 $var wire 5 . sr_b_6 $end
 $var wire 2 / normExp $end
 $var wire 1 0 io_valid_in $end
 $var wire 1 1 sr_valid_6 $end
 $var wire 1 2 sr_valid_5 $end
 $var wire 1 3 sr_valid_4 $end
 $var wire 1 4 sr_valid_3 $end
 $var wire 1 5 reset $end
 $var wire 2 6 commonExp $end
 $var wire 5 7 sr_a_0 $end
 $var wire 5 8 sr_a_1 $end
 $var wire 5 9 sr_a_2 $end
 $var wire 5 : sr_a_3 $end
 $var wire 5 ; sr_a_4 $end
 $var wire 5 < sr_a_5 $end
 $var wire 5 = sr_a_6 $end
 $var wire 4 > sum $end
 $var wire 1 ? io_valid_out $end
 $var wire 1 @ clock $end
 $var wire 3 A alignedFracB $end
 $var wire 3 B alignedFracA $end
 $var wire 2 C shiftAmount $end
 $var wire 5 D io_out $end
 $var wire 1 E aBigger $end
 $var wire 2 F fracA $end
 $var wire 2 G fracB $end
 $var wire 2 H expB $end
 $var wire 2 I expA $end
 $var wire 2 J normFrac $end
$upscope $end
$enddefinitions $end
$dumpvars
00
01
02
03
b00 6
04
b000 B
05
b0000 >
b00 /
0?
0@
b00000 %
b00000 '
0E
b00000 )
b00000 (
b00000 +
b00000 *
b000 A
b00000 -
b00000 ,
b00000 .
b000 &
b000 #
b00000 7
b00000 9
b00000 8
b00000 ;
b00000 :
b00000 =
b00000 <
b00 I
0!
b00 H
0"
b00 G
b00000 D
b00 F
0$
b00 J
b00 C
$end
#0
b100 A
b100 B
b100 #
b00100 D
15
1E
b100 &
b1000 >
b01 /
#1
1@
#6
10
0@
05
#11
1@
1$
#16
0@
b00001 (
b00001 *
#21
1@
1"
b00001 %
b00001 7
#26
0@
b00010 (
#31
1@
1!
b00001 '
b00010 7
b00001 8
#36
0@
b00011 (
b00010 *
#41
1@
14
b00010 %
b00011 7
b00010 8
b00001 )
b00001 9
#46
0@
b00100 (
#51
1@
13
b00010 '
b00100 7
b00011 8
b00010 9
b00001 :
b00001 +
#56
0@
b00101 (
b00011 *
#61
1@
12
b00011 %
b00101 7
b00100 8
b00010 )
b00011 9
b00010 :
b00001 ;
b00001 ,
#66
0@
b00110 (
#71
1@
b00011 '
b00010 +
b00001 -
11
b00110 7
b00101 8
b00100 9
b00011 :
b00010 ;
b00001 <
1?
#76
0@
b00111 (
b00100 *
#81
1@
b101 A
b101 B
b101 #
b00101 D
b00100 %
b101 &
b01 F
b01 G
b00011 )
b01 J
b00010 ,
b00001 .
b00111 7
b00110 8
b00101 9
b00100 :
b00011 ;
b00010 <
b00001 =
b1010 >
#86
0@
b01000 (
#91
1@
b110 B
b110 #
b10 F
b00100 '
b00011 +
b00010 -
b01000 7
b00111 8
b00110 9
b00101 :
b00100 ;
b00011 <
b00010 =
b1011 >
#96
0@
b01001 (
b00101 *
#101
1@
b110 A
b111 B
b111 #
b00110 D
b00101 %
b110 &
b11 F
b10 G
b00100 )
b10 J
b00011 ,
b00010 .
b01001 7
b01000 8
b00111 9
b00110 :
b00101 ;
b00100 <
b00011 =
b1101 >
#106
0@
b01010 (
#111
1@
b011 A
b100 B
b100 #
b01 C
b00111 D
b00 F
b00101 '
b01 I
b11 J
b00100 +
b00011 -
b01 6
b01010 7
b01001 8
b01000 9
b00111 :
b00110 ;
b00101 <
b00100 =
b0111 >
#116
0@
b01011 (
b00110 *
#121
1@
b101 B
b101 #
b01000 D
b00110 %
b111 &
b01 F
b11 G
b00101 )
b00 J
b00100 ,
b00011 .
b10 /
b01011 7
b01010 8
b01001 9
b01000 :
b00111 ;
b00110 <
b00101 =
b1000 >
#126
0@
b01100 (
#131
1@
b110 B
b110 #
b10 F
b00110 '
b00101 +
b00100 -
b01100 7
b01011 8
b01010 9
b01001 :
b01000 ;
b00111 <
b00110 =
b1001 >
#136
0@
b01101 (
b00111 *
#141
1@
b100 A
b111 B
b111 #
b00 C
b01001 D
b00111 %
b100 &
b11 F
b00 G
b01 H
b00110 )
b01 J
b00101 ,
b00100 .
b01101 7
b01100 8
b01011 9
b01010 :
b01001 ;
b01000 <
b00111 =
b1011 >
#146
0@
b01110 (
#151
1@
b010 A
b100 B
b100 #
b01 C
b01010 D
b00 F
b00111 '
b10 I
b10 J
b00110 +
b00101 -
b10 6
b01110 7
b01101 8
b01100 9
b01011 :
b01010 ;
b01001 <
b01000 =
b0110 >
#156
0@
b01111 (
b01000 *
#161
1@
b101 B
b101 #
b01011 D
b01000 %
b101 &
b01 F
b01 G
b00111 )
b11 J
b00110 ,
b00101 .
b01111 7
b01110 8
b01101 9
b01100 :
b01011 ;
b01010 <
b01001 =
b0111 >
#166
0@
b10000 (
#171
1@
b110 B
b110 #
b01100 D
b10 F
b01000 '
b00 J
b00111 +
b00110 -
b11 /
b10000 7
b01111 8
b01110 9
b01101 :
b01100 ;
b01011 <
b01010 =
b1000 >
#176
0@
b10001 (
b01001 *
#181
1@
b011 A
b111 B
b111 #
b01101 D
b01001 %
b110 &
b11 F
b10 G
b01000 )
b01 J
b00111 ,
b00110 .
b10001 7
b10000 8
b01111 9
b01110 :
b01101 ;
b01100 <
b01011 =
b1010 >
#186
0@
b10010 (
#191
1@
b001 A
b100 B
b100 #
b10 C
b00 F
b01001 '
b11 I
b01000 +
b00111 -
b11 6
b10010 7
b10001 8
b10000 9
b01111 :
b01110 ;
b01101 <
b01100 =
b0101 >
#196
0@
b10011 (
b01010 *
#201
1@
b101 B
b101 #
b01110 D
b01010 %
b111 &
b01 F
b11 G
b01001 )
b10 J
b01000 ,
b00111 .
b10011 7
b10010 8
b10001 9
b10000 :
b01111 ;
b01110 <
b01101 =
b0110 >
#206
0@
b10100 (
#211
1@
b110 B
b110 #
b01111 D
b10 F
b01010 '
b11 J
b01001 +
b01000 -
b10100 7
b10011 8
b10010 9
b10001 :
b10000 ;
b01111 <
b01110 =
b0111 >
#216
0@
b10101 (
b01011 *
#221
1@
b010 A
b111 B
b01 C
b00000 D
b11 F
b00 G
b10 H
b00 J
b111 #
b01011 %
b100 &
b01010 )
b01001 ,
b01000 .
b00 /
b10101 7
b10100 8
b10011 9
b10010 :
b10001 ;
b10000 <
b01111 =
b1001 >
#226
0@
b10110 (
#231
1@
b100 A
b001 B
b100 #
b10 C
b01001 D
0E
b00 F
b01011 '
b00 I
b01 J
b01010 +
b01001 -
b10 /
b10 6
b10110 7
b10101 8
b10100 9
b10011 :
b10010 ;
b10001 <
b10000 =
b0101 >
#236
0@
b10111 (
b01100 *
#241
1@
b101 A
b101 #
b01010 D
b01100 %
b101 &
b01 F
b01 G
b01011 )
b10 J
b01010 ,
b01001 .
b10111 7
b10110 8
b10101 9
b10100 :
b10011 ;
b10010 <
b10001 =
b0110 >
#246
0@
b11000 (
#251
1@
b110 #
b10 F
b01100 '
b01011 +
b01010 -
b11000 7
b10111 8
b10110 9
b10101 :
b10100 ;
b10011 <
b10010 =
#256
0@
b11001 (
b01101 *
#261
1@
b110 A
b111 #
b01011 D
b01101 %
b110 &
b11 F
b10 G
b01100 )
b11 J
b01011 ,
b01010 .
b11001 7
b11000 8
b10111 9
b10110 :
b10101 ;
b10100 <
b10011 =
b0111 >
#266
0@
b11010 (
#271
1@
b010 B
b100 #
b01 C
b01100 D
b00 F
b01101 '
b01 I
b00 J
b01100 +
b01011 -
b11 /
b11010 7
b11001 8
b11000 9
b10111 :
b10110 ;
b10101 <
b10100 =
b1000 >
#276
0@
b11011 (
b01110 *
#281
1@
b111 A
b101 #
b01110 %
b111 &
b01 F
b11 G
b01101 )
b01100 ,
b01011 .
b11011 7
b11010 8
b11001 9
b11000 :
b10111 ;
b10110 <
b10101 =
b1001 >
#286
0@
b11100 (
#291
1@
b011 B
b110 #
b01101 D
b10 F
b01110 '
b01 J
b01101 +
b01100 -
b11100 7
b11011 8
b11010 9
b11001 :
b11000 ;
b10111 <
b10110 =
b1010 >
#296
0@
b11101 (
b01111 *
#301
1@
b100 A
b001 B
b111 #
b10 C
b01111 %
b100 &
b11 F
b00 G
b11 H
b01110 )
b01101 ,
b01100 .
b11 6
b11101 7
b11100 8
b11011 9
b11010 :
b11001 ;
b11000 <
b10111 =
b0101 >
#306
0@
b11110 (
#311
1@
b010 B
b100 #
b01 C
b01110 D
b00 F
b01111 '
b10 I
b10 J
b01110 +
b01101 -
b11110 7
b11101 8
b11100 9
b11011 :
b11010 ;
b11001 <
b11000 =
b0110 >
#316
00
0@
b00000 (
b00000 *
#321
1@
b101 A
b101 #
0$
b01111 D
b00000 %
b101 &
b01 F
b01 G
b01111 )
b11 J
b01110 ,
b01101 .
b00000 7
b11110 8
b11101 9
b11100 :
b11011 ;
b11010 <
b11001 =
b0111 >
#326
0@
#331
1@
0"
b011 B
b110 #
b00000 D
b10 F
b00000 '
b00 J
b01111 +
b01110 -
b00 /
b00000 8
b11110 9
b11101 :
b11100 ;
b11011 <
b11010 =
b1000 >
#336
0@
#341
1@
0!
b110 A
b111 #
b110 &
b11 F
b10 G
b00000 )
b01111 ,
b01110 .
b00000 9
b11110 :
b11101 ;
b11100 <
b11011 =
b1001 >
#346
0@
#351
1@
b100 B
b100 #
b00 C
b00001 D
1E
b00 F
b11 I
b01 J
b00000 +
b01111 -
04
b00000 :
b11110 ;
b11101 <
b11100 =
b1010 >
#356
0@
#361
1@
b111 A
b101 B
b101 #
b00010 D
b111 &
b01 F
b11 G
b10 J
b00000 ,
b01111 .
03
b00000 ;
b11110 <
b11101 =
b1100 >
#366
0@
#371
1@
02
b110 B
b110 #
b10 F
b00000 <
b00000 -
b11110 =
b1101 >
#376
0@
#381
1@
b100 A
b100 B
b100 #
b00100 D
b100 &
b00 F
b00 G
b00 H
b00 I
b00 J
b00000 .
b01 /
01
b00 6
b00000 =
b1000 >
0?
#386
0@
#391
1@
#396
0@
#401
1@
#406
0@
